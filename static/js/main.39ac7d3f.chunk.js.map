{"version":3,"sources":["animation/redux/reducers/figuresProjects/actionTypes.ts","animation/redux/reducers/figuresProjects/actions.ts","animation/static/FigureTypes.ts","animation/SVGFiguresList/SVGFiguresList.tsx","animation/SVGProjectsList/FileImport/FileImport.tsx","animation/SVGProjectsList/SVGProjectsList.tsx","animation/SVGEditors/NameChange/ActorName.tsx","animation/SVGEditors/SelectDropdownValue/SelectDropdownValue.tsx","animation/SVGEditors/InputNumberRange/InputNumberRange.tsx","animation/static/AxisTypes.ts","animation/SVGEditors/ColorPicker/ColorPicker.tsx","animation/SVGEditors/NameChange/ProjectName.tsx","animation/SVGEditors/SVGFigureEditor/SVGFigureEditor.tsx","animation/static/SVGDimensions.ts","animation/SVGEditors/AnimationSwitch/AnimationSwitch.tsx","animation/SVGEditors/SVGAnimationEditor/SVGAnimationEditor.tsx","animation/SVGCanvas/SVGExport/SVGExport.tsx","animation/static/Animation.ts","animation/static/Figure.ts","animation/SVGCanvas/SVGImport/SVGImport.tsx","animation/SVGCanvas/SVGAnimation/SVGAnimate.js","animation/SVGCanvas/SVGAnimation/SVGAnimationMotion.js","animation/SVGCanvas/SVGFigures/SVGCircle.js","animation/SVGCanvas/SVGFigures/SVGSquare.js","animation/SVGCanvas/SVGFigures/SVGPolygon.js","animation/SVGCanvas/UndoRedo/UndoRedo.tsx","animation/SVGCanvas/SVGCanvas.tsx","animation/SVGEditorNav/SVGEditorNav.tsx","animation/redux/reducers/selectedList/actions.ts","animation/redux/reducers/selectedList/actionTypes.ts","animation/SVGProjectsFiguresNav/SVGProjectsFiguresNav.tsx","animation/SVGAnimation.tsx","serviceWorker.js","animation/static/StartingData.ts","animation/static/Project.ts","animation/redux/initialState.ts","animation/redux/reducers/utils.ts","animation/redux/reducers/figuresProjects/figuresProjects.ts","animation/redux/reducers/rootReducer.ts","animation/redux/reducers/selectedList/selectedList.ts","animation/redux/store.ts","index.tsx"],"names":["CHANGE_FIGURE_VALUE","changeFigureValueAction","figureValue","type","payload","FigureTypes","SVGFiguresList","elementId","this","props","selectedFigure","id","e","stopPropagation","deleteFigure","_this","_this$props","figuresList","addFigure","showFigureEditor","console","log","react_default","a","createElement","className","style","height","onClick","index_es","icon","faPlus","size","map","item","key","name","isActiveListElement","deleteFigureFromList","faTrash","React","PureComponent","connect","state","_state$figuresProject","figuresProjects","present","dispatch","undefined","deleteFigureAction","showFigureEditorAction","FileImport","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","fileReader","FileReader","handleChooseFile","event","target","files","file","length","endsWith","fileType","setState","fileName","concat","ifCorrectFile","readAsText","onload","result","fileContent","importFilePlaceholder","_this2","importIdentificator","buttonTitle","importModalHeader","Fragment","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","aria-describedby","onChange","evt","value","handleImportedProjectFile","disabled","data-toggle","data-target","handleImportedProjectFileAction","SVGProjectsList","downloadObjectAsJson","exportObj","exportName","dataStr","encodeURIComponent","JSON","stringify","downloadAnchorNode","document","setAttribute","body","appendChild","click","remove","exportProjects","projectList","exportSelectedProject","selectedProject","deleteProject","addProject","setCurrentProject","deleteProjectFromList","SVGProjectsList_FileImport_FileImport","deleteProjectAction","setCurrentProjectAction","ActorName","useSelector","useDispatch","changeFigureValue","useCallback","editName","useRef","ref","suppressContentEditableWarning","contentEditable","onBlur","current","valueType","innerHTML","SelectDropdownValue","initialValue","get","header","options","dropdownOptions","optionsValues","keys","renderOptions","InputNumberRange","_ref","minValue","maxValue","js_default","step","Number","min","max","_e$target","Math","changeTextInputValue","AxisTypes","ColorPicker","initialColor","lib","color","ProjectName","changeProjectName","changeProjectNameAction","SVGFigureEditor","NameChange_ProjectName","SVGEditors_NameChange_ActorName","SVGEditors_SelectDropdownValue_SelectDropdownValue","SVGEditors_InputNumberRange_InputNumberRange","figureType","Polygon","SVGEditors_ColorPicker_ColorPicker","SVGDimensions","freeze","width","AnimationSwitch","checked","react_switch_default","SVGAnimationEditor","SVGEditors_AnimationSwitch_AnimationSwitch","ifAnimationEnabled","animationEnabled","SVGExport","textArea","createRef","svgText","ReactDOMServer","renderToStaticMarkup","select","copySVGAnimation","readOnly","handleTextSelect","Animation","href","attributeName","from","to","additive","repeatCount","calcMode","keyTimes","keySplines","dur","begin","fill","r","Figure","_id","hrefid","animationType","xPosition","yPosition","numOfSides","opacity","strokeWidth","stroke","animation","staticId","createClass","set","newid","SVGImport","svgNotSupported","alertInformation","reader","content","svgJSON","XMLParser","parseFromString","figures","i","children","svgObject","isFigure","push","createFigureFromSVG","toUpperCase","information","addAnimationToFigure","importFiguresFromFile","figure","svgProperty","attributes","atr","hex","parseInt","parseFloat","_loop","forEach","index","_this3","handleImportFile","importedFiguresList","importFiguresFromFileAction","SVGAnimate","_to","_from","_attributename","SVGAnimationMotion","rr","path","SVGCircle","cursor","cx","cy","figuretype","xposition","yposition","SVGAnimation_SVGAnimationMotion","SVGAnimation_SVGAnimate","computeToPoints","computeCornerPoints","xMiddle","yMiddle","sideLength","squarePoints","SVGSquare","numofsides","radius","polygonPoints","cos","PI","sin","SVGPolygon","Icon","styled","div","_templateObject","canClick","UndoRedo","handleKeyPress","canUndo","canRedo","onUndo","onRedo","ctrlKey","shiftKey","addEventListener","_this$props2","react","faUndo","faRedo","past","future","UndoActionCreators","undo","redo","SVGCanvas","getAttribute","changeActiveSVGFigure","SVGFigures_SVGCircle","SVGFigures_SVGSquare","SVGFigures_SVGPolygon","version","xmlns","viewBox","setFigure","getFiguresToRender","SVGCanvas_SVGExport_SVGExport","title","renderSVG","SVGCanvas_SVGImport_SVGImport","SVGCanvas_UndoRedo_UndoRedo","changeActiveSVGFigureAction","SVGEditorNav","isActiveEditor","ifAnimationEditionMode","handleEditorTabChange","selectedList","flag","handleEditorTabChangeAction","SVGProjectsFiguresNav","ifProjectCreationMode","handleProjectFigureTabChange","isActiveProjectFigureTab","changeProjectFigureTabAction","SVGAnimation","animation_SVGProjectsFiguresNav_SVGProjectsFiguresNav","animation_SVGProjectsList_SVGProjectsList","animation_SVGFiguresList_SVGFiguresList","animation_SVGCanvas_SVGCanvas","animation_SVGEditorNav_SVGEditorNav","SVGEditors_SVGAnimationEditor_SVGAnimationEditor","SVGEditors_SVGFigureEditor_SVGFigureEditor","_state$selectedList","Boolean","window","location","hostname","match","figuresForProjects1","figuresForProjects2","figuresForProjects3","FiguresForProjects","uuidv4","require","Project","substr","initialFiguresProjectsState","toConsumableArray","Array","project","createInitialFiguresProjectsState","selectedListState","deleteItemFromArray","array","itemId","filter","compareItems","findItemInArray","propertyType","propertyValue","find","updateObject","oldObject","newValues","assign","deepCloneObject","objectToCopy","cloneDeep","updateProjectState","_deepCloneObject5","projectToUpdateIndex","findIndex","undoableFiguresProjects","undoable","arguments","action","newProjectList","parse","objectSpread","_updateProjectState","isSelectedFigure","_updateProjectState2","_deepCloneObject4","isSelectedProject","_action$payload","_deepCloneObject6","_updateProjectState3","_deepCloneObject7","ChangeProjectName","excludeAction","rootReducer","combineReducers","createStore","composeWithDevTools","rootElement","getElementById","ReactDOM","render","es","store","src_animation_SVGAnimation","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"ibAEaA,EAA8B,sBCapC,SAASC,EAAwBC,GACpC,MAAO,CACHC,KAAMH,EACNI,QAASF,GAWV,IC7BKG,ECuBNC,8LAEgBC,GAElB,OADwBC,KAAKC,MAAMC,eAAiBF,KAAKC,MAAMC,eAAeC,IAAM,KACvDJ,EAAY,sBAAwB,gDAG9CK,EAAQD,GAC3BC,EAAEC,kBACFL,KAAKC,MAAMK,aAAaH,oCAGjB,IAAAI,EAAAP,KAAAQ,EAC8CR,KAAKC,MAAlDQ,EADDD,EACCC,YAAaC,EADdF,EACcE,UAAWC,EADzBH,EACyBG,iBAEhC,OADAC,QAAQC,IAAI,yBAEVC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAA0BC,MAAO,CAAEC,OAAQ,QACxDL,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iCAAhB,WACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBAAwBG,QAAS,kBAAMV,MACrDI,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAiBJ,UAAU,aAAaK,KAAMC,IAAQC,KAAK,SAG/DV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACbH,EAAAC,EAAAC,cAAA,MAAIb,GAAG,eAAec,UAAU,iCAC7BR,GAAeA,EAAYgB,IAAI,SAACC,GAC/B,OACEZ,EAAAC,EAAAC,cAAA,MACEW,IAAKD,EAAKvB,GAAKuB,EAAKE,KACpBX,UAAW,+BAAiCV,EAAKsB,oBAAoBH,EAAKvB,IAC1EiB,QAAS,kBAAMT,EAAiBe,EAAKvB,MAEpCuB,EAAKE,KACNd,EAAAC,EAAAC,cAAA,QAAMI,QAAS,SAAChB,GAAD,OAAYG,EAAKuB,qBAAqB1B,EAAGsB,EAAKvB,MAC3DW,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACEJ,UAAU,gBACVK,KAAMS,IACNP,KAAK,qBArCEQ,IAAMC,eA6DpBC,cAZS,SAACC,GAAoC,IAAAC,EACnBD,EAAME,gBAAgBC,QAC9D,MAAO,CAAE7B,YAFkD2B,EACnD3B,YACcP,eAFqCkC,EACtClC,iBAII,SAACqC,GAC1B,MAAO,CACL7B,UAAW,kBAAM6B,EFXkC,CACnD5C,KDjE8B,aCkE9BC,aAAS4C,KEUTlC,aAAc,SAACH,GAAD,OAAQoC,EFIQ,SAACpC,GAAD,MAAqC,CACnER,KD/EiC,gBCgFjCC,QAAS,CAAEO,OENoBsC,CAAmBtC,KAClDQ,iBAAkB,SAACR,GAAD,OAAQoC,EFeQ,SAACpC,GAAD,MAAyC,CAC3ER,KDzFsC,qBC0FtCC,QAAS,CAAEO,OEjBwBuC,CAAuBvC,OAG/C+B,CAGbpC,GC/DI6C,sBAEF,SAAAA,EAAY1C,GAAc,IAAAM,EAAA,OAAAqC,OAAAC,EAAA,EAAAD,CAAA5C,KAAA2C,IACtBpC,EAAAqC,OAAAE,EAAA,EAAAF,CAAA5C,KAAA4C,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAhD,KAAMC,KASVgD,WAAyB,IAAIC,WAVH3C,EAY1B4C,iBAAmB,SAACC,GAChB,GAAIA,EAAMC,OAAOC,MAAM,GAAI,CACvB,IAAIC,EAAOH,EAAMC,OAAOC,MAAMF,EAAMC,OAAOC,MAAME,OAAS,GAE1D,IAAKD,EAAK3B,KAAK6B,SAASlD,EAAKN,MAAMyD,UAE/B,YADAnD,EAAKoD,SAAS,CAAEC,SAAQ,QAAAC,OAAUtD,EAAKN,MAAMyD,SAArB,uBAAoDI,eAAe,IAG3FvD,EAAKoD,SAAS,CAAEG,eAAe,IAGnCvD,EAAK0C,WAAWc,WAAWR,EAAM,SACjChD,EAAK0C,WAAWe,OAAS,WACrBpD,QAAQC,IAAIN,EAAK0C,WAAWgB,QAC5B1D,EAAKoD,SAAS,CAAEO,YAAa3D,EAAK0C,WAAWgB,UAEjD1D,EAAKoD,SAAS,CAAEC,SAAUL,EAAK3B,SA1BnCrB,EAAK4B,MAAQ,CACT+B,YAAa,GACbN,SAAUrD,EAAKN,MAAMkE,sBACrBL,eAAe,GALGvD,wEAgCjB,IAAA6D,EAAApE,KAAAQ,EAC2DR,KAAKC,MAA7DoE,EADH7D,EACG6D,oBAAqBC,EADxB9D,EACwB8D,YAAaC,EADrC/D,EACqC+D,kBAC1C,OACIzD,EAAAC,EAAAC,cAACF,EAAAC,EAAMyD,SAAP,KACI1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAad,GAAIkE,EAAqBI,UAAW,EAAGC,KAAK,SAASC,kBAAgB,mBAAmBC,cAAY,QAC5H9D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeyD,KAAK,YAC/B5D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcd,GAAG,oBAAoBoE,GACnDzD,EAAAC,EAAAC,cAAA,UAAQrB,KAAK,SAASsB,UAAU,QAAQ4D,eAAa,QAAQC,aAAW,SACpEhE,EAAAC,EAAAC,cAAA,QAAM4D,cAAY,QAAlB,UAGR9D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAmBd,GAAG,yBAAtC,WAEJW,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOrB,KAAK,OAAOsB,UAAU,oBAAoBd,GAAG,mBAAmB4E,mBAAiB,wBACpFC,SAAU,SAACC,GAAD,OAASb,EAAKjB,iBAAiB8B,IAAM7D,QAAS,SAACgC,GAAiBA,EAAMC,OAAO6B,MAAQ,QACnGpE,EAAAC,EAAAC,cAAA,SAAOC,UAAU,qBAAqBjB,KAAKmC,MAAMyB,aAI7D9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACVjB,KAAKmC,MAAM2B,cACNhD,EAAAC,EAAAC,cAAA,UAAQrB,KAAK,SAASsB,UAAU,kBAAkB4D,eAAa,QAAQzD,QAAS,kBAAMgD,EAAKnE,MAAMkF,0BAA0Bf,EAAKjC,MAAM+B,eAAtI,UACApD,EAAAC,EAAAC,cAAA,UAAQrB,KAAK,SAASyF,UAAQ,EAACnE,UAAU,kBAAkB4D,eAAa,SAAxE,cAMtB/D,EAAAC,EAAAC,cAAA,UAAQrB,KAAK,SAASsB,UAAU,0CAA0CoE,cAAY,QAAQC,cAAA,IAAAzB,OAAiBQ,IAAuBvD,EAAAC,EAAAC,cAAA,oBAAWF,EAAAC,EAAAC,cAAA,WAAX,IAAmBsD,EAAnB,KAAtI,cApEStC,IAAMC,gBAiFhBC,cACX,KARuB,SAACK,GACxB,MAAO,CACH4C,0BAA2B,SAACjB,GAAD,OAAyB3B,EH4Cb,SAAC2B,GAAD,MAAgE,CAC3GvE,KDrIgD,+BCsIhDC,QAASsE,GG9CwDqB,CAAgC,CAAErB,oBAKxFhC,CAGbS,GClFI6C,6MAYFC,qBAAuB,SAACC,EAAgCC,GACpD,IAAIC,EAAU,gCAAkCC,mBAAmBC,KAAKC,UAAUL,IAC9EM,EAAqBC,SAASjF,cAAc,KAChDgF,EAAmBE,aAAa,OAAQN,GACxCI,EAAmBE,aAAa,WAAYP,EAAa,SACzDM,SAASE,KAAKC,YAAYJ,GAC1BA,EAAmBK,QACnBL,EAAmBM,YAGvBC,eAAiB,WACbhG,EAAKkF,qBAAqBlF,EAAKN,MAAMuG,YAAa,eAGtDC,sBAAwB,WACpBlG,EAAKkF,qBAAqBlF,EAAKN,MAAMyG,gBAAiB,mGAzBtC3G,GAEhB,OADuD,OAA/BC,KAAKC,MAAMyG,gBAA2B1G,KAAKC,MAAMyG,gBAAgBvG,IAAM,KAClEJ,EAAY,sBAAwB,iDAG/CK,EAAQD,GAC1BC,EAAEC,kBACFL,KAAKC,MAAM0G,cAAcxG,oCAqBpB,IAAAiE,EAAApE,KACLY,QAAQC,IAAI,0BADP,IAAAL,EAEkDR,KAAKC,MAApDuG,EAFHhG,EAEGgG,YAAaI,EAFhBpG,EAEgBoG,WAAYC,EAF5BrG,EAE4BqG,kBACjC,OACI/F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAA0BC,MAAO,CAAEC,OAAQ,QACtDL,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iCAAhB,YACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBAAwBG,QAAS,kBAAMwF,MACnD9F,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAiBJ,UAAU,aAAaK,KAAMC,IAAQC,KAAK,SAGnEV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6CACXH,EAAAC,EAAAC,cAAA,MAAIb,GAAG,eAAec,UAAU,iCAC3BuF,GAAeA,EAAY/E,IAAI,SAACC,GAC7B,OACIZ,EAAAC,EAAAC,cAAA,MACIW,IAAKD,EAAKvB,GACVc,UAAW,gCAAkCmD,EAAKvC,oBAAoBH,EAAKvB,IAC3EiB,QAAS,kBAAMyF,EAAkBnF,EAAKvB,MACrCW,EAAAC,EAAAC,cAAA,KAAGC,UAAU,MACTS,EAAKE,KACNd,EAAAC,EAAAC,cAAA,QAAMI,QAAS,SAAChB,GAAD,OAAOgE,EAAK0C,sBAAsB1G,EAAGsB,EAAKvB,MACrDW,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACIJ,UAAU,iBACVK,KAAMS,IACNP,KAAK,cASrCV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6EACXH,EAAAC,EAAAC,cAAC+F,EAAD,CACIzC,YAAa,WACbZ,SAAU,QACVW,oBAAqB,gBACrBE,kBAAmB,iCACnBJ,sBAAuB,iCAG3BrD,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yCAAyCG,QAAS,kBAAMgD,EAAKqC,0BAAyB3F,EAAAC,EAAAC,cAAA,mBAAUF,EAAAC,EAAAC,cAAA,WAAV,sBACxGF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yCAAyCG,QAAS,kBAAMgD,EAAKmC,mBAAkBzF,EAAAC,EAAAC,cAAA,mBAAUF,EAAAC,EAAAC,cAAA,WAAV,uBA1EvFgB,IAAMC,eA6FrBC,cAbS,SAACC,GAAoC,IAAAC,EAChBD,EAAME,gBAAgBC,QAC/D,MAAO,CAAEoE,gBAFgDtE,EACjDsE,gBACkBF,YAF+BpE,EAChCoE,cAIF,SAACjE,GACxB,MAAO,CACHqE,WAAY,kBAAMrE,EJpF+B,CACrD5C,KDzB+B,cC0B/BC,aAAS4C,KImFLmE,cAAe,SAACxG,GAAD,OAAgBoC,EJvEJ,SAACpC,GAAD,MAAoC,CACnER,KDrCkC,iBCsClCC,QAASO,GIqEmC6G,CAAoB,CAAC7G,SAC7D0G,kBAAmB,SAAC1G,GAAD,OAAgBoC,EJ3DJ,SAACpC,GAAD,MAAwC,CAC3ER,KDhDuC,sBCiDvCC,QAASO,GIyDuC8G,CAAwB,CAAC9G,WAI9D+B,CAGbsD,GC1Fa0B,SAtB6B,SAACjH,GAEzC,IAAMC,EAAwBiH,YAAY,SAAChF,GAAD,OAAyBA,EAAME,gBAAgBC,QAAQpC,iBAC3FqC,EAAW6E,cACXC,EAAoBC,sBAAY,SAAC3H,EAAcuF,GAAf,OAAiC3C,EAAS9C,EAAwB,CAAEE,OAAMuF,YAAW,CAAC3C,IACtHgF,EAAWC,iBAA0B,MAO3C,OACI1G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,UAAQyG,IAAKF,EAAUtG,UAAU,wBAAyByG,gCAAgC,EAAMC,iBAAiB,EAAMC,OAAQ,WAP/HL,GAAYA,EAASM,SACrBR,EAAkBpH,EAAM6H,UAAWP,EAASM,QAAQE,aAOnD7H,EAAeD,EAAM6H,uBCuBnBE,EAlCuC,SAAC/H,GACrD,IAAMgI,EAAed,YAAY,SAAChF,GAAD,OAAyB+F,cAAI/F,EAAME,gBAAgBC,QAAQpC,eAAgBD,EAAM6H,aAC5GvF,EAAW6E,cACXC,EAAoBC,sBAAY,SAAC3H,EAAcuF,GAAf,OAAiC3C,EAAS9C,EAAwB,CAAEE,OAAMuF,YAAW,CAAC3C,IAkB5H,OACEzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCAAf,IAAwDhB,EAAMkI,QAC9DrH,EAAAC,EAAAC,cAAA,UACEkE,MAAO+C,EACPhH,UAAU,oBACV+D,SAAU,SAAA5E,GAAC,OAVOgD,EAUYhD,OATlCiH,EAAkBpH,EAAM6H,UAAW1E,EAAMC,OAAO6B,OAD3B,IAAC9B,IAZF,WACpB,IAAMgF,EAAUnI,EAAMoI,gBAChBC,EAAgB1F,OAAO2F,KAAKH,GAClC,OAAOxF,OAAO2F,KAAKH,GAAS3G,IAAI,SAACC,EAAMC,GACrC,OACEb,EAAAC,EAAAC,cAAA,UAAQW,IAAKA,EAAKuD,MAAOoD,EAAc3G,IACpCD,KAiBF8G,wBCgBMC,UA1CmC,SAACxI,GACjD,IAAMgI,EAAed,YAAa,SAAChF,GAAD,OAAyB+F,cAAI/F,EAAME,gBAAgBC,QAAQpC,eAAgBD,EAAM6H,aAC7GvF,EAAW6E,cACXC,EAAoBC,sBAAY,SAAC3H,EAAYuF,GAAb,OAA+B3C,EAAS9C,EAAwB,CAACE,OAAKuF,YAAS,CAAC3C,IAH3DmG,EAI9B,CAACzI,EAAM0I,SAAU1I,EAAM2I,UAA7CD,EAJoDD,EAAA,GAI1CE,EAJ0CF,EAAA,GAa3D,OACE5H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCAAf,IAAwDhB,EAAMkI,QAC9DrH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAC6H,EAAA9H,EAAD,CACE4H,SAAUA,EACVC,SAAUA,EACV1D,MAAO+C,EACPa,KAAM7I,EAAM6I,KACZ9D,SAAU,SAAAE,GAAK,OAAImC,EAAkBpH,EAAM6H,UAAWiB,OAAO7D,QAGjEpE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,SACErB,KAAK,SACLqJ,IAAKL,EACLM,IAAKL,EACLE,KAAM7I,EAAM6I,KACZ7H,UAAU,eACViE,MAAO+C,EACPjD,SAAU,SAAA5E,GAAC,OA5BQ,SAACA,GAAW,IAAA8I,EACpB9I,EAAEiD,OAAf2F,EADiCE,EACjCF,IAAKC,EAD4BC,EAC5BD,IACP/D,EAAQ6D,OAAO3I,EAAEiD,OAAO6B,OAC5BA,EAAQiE,KAAKF,IAAIF,OAAOC,GAAMG,KAAKH,IAAID,OAAOE,GAAMF,OAAO7D,KAC3DmC,EAAkBpH,EAAM6H,UAAW5C,GAwBZkE,CAAqBhJ,qBNlDpCP,uEAMGA,IONVwJ,EPMUxJ,aQuBAyJ,EAlB+B,SAACrJ,GAC3C,IAAMC,EAAwBiH,YAAY,SAAChF,GAAD,OAAyBA,EAAME,gBAAgBC,QAAQpC,iBAC3FqC,EAAW6E,cACXmC,EAAerJ,EAAeD,EAAM6H,WAEpCT,EAAoBC,sBAAY,SAAC3H,EAAMuF,GAAP,OAAiB3C,EAAS9C,EAAwB,CAAEE,OAAMuF,YAAW,CAAC3C,IAG5G,OACIzB,EAAAC,EAAAC,cAACF,EAAAC,EAAMyD,SAAP,KACI1D,EAAAC,EAAAC,cAAA,KAAGC,UAAU,2CAA2ChB,EAAMkI,QAC9DrH,EAAAC,EAAAC,cAACwI,EAAA,cAAD,CACIC,MAAOF,EACPvE,SAAU,SAAAyE,GAAK,OAAIpC,EAAkBpH,EAAM6H,UAAW2B,QCMvDC,EAvBwB,WAEnC,IAAMhD,EAAkBS,YAAY,SAAChF,GAAD,OAAyBA,EAAME,gBAAgBC,QAAQoE,kBACrFnE,EAAW6E,cACXG,EAAWC,iBAA0B,MACrCmC,EAAoBrC,sBAAY,SAAC1F,GAAD,OAAkBW,EVmJrB,SAACX,GAAD,MAA0C,CAC7EjC,KDnJuC,sBCoJvCC,QAASgC,GUrJwDgI,CAAwB,CAAEhI,WAAU,CAACW,IAQtG,OACIzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,UAAQyG,IAAKF,EAAUtG,UAAU,wBAAwByG,gCAAgC,EAAMC,iBAAiB,EAAMC,OAAQ,WAP9HL,GAAYA,EAASM,SACrB8B,EAAkBpC,EAASM,QAAQE,aAO9BrB,EAAe,QCR1BmD,mLAGFjJ,QAAQC,IAAI,0BADL,IAECX,EAAmBF,KAAKC,MAAxBC,eAER,OADAU,QAAQC,IAAIX,EAAe,mCAEzBY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACZf,GACCY,EAAAC,EAAAC,cAACF,EAAAC,EAAMyD,SAAP,KACE1D,EAAAC,EAAAC,cAAC8I,EAAD,MACAhJ,EAAAC,EAAAC,cAAC+I,EAAD,CACEjC,UAAU,SAEZhH,EAAAC,EAAAC,cAACgJ,EAAD,CACE7B,OAAQ,cACRL,UAAU,aACVO,gBAAiBxI,IAEnBiB,EAAAC,EAAAC,cAACiJ,EAAD,CACE9B,OAAQ,cACRL,UAAU,OACVa,SAAU,EACVC,SAAU,IACVE,KAAM,IAEP5I,EAAegK,aAAerK,EAAYsK,SACzCrJ,EAAAC,EAAAC,cAACiJ,EAAD,CACE9B,OAAO,kBACPL,UAAU,aACVa,SAAU,EACVC,SAAU,GACVE,KAAM,IAGVhI,EAAAC,EAAAC,cAACiJ,EAAD,CACE9B,OAAO,aACPL,UAAU,YACVa,SAAU,EACVC,SAAU,IACVE,KAAM,IAERhI,EAAAC,EAAAC,cAACiJ,EAAD,CACE9B,OAAO,aACPL,UAAU,YACVa,SAAU,EACVC,SAAU,IACVE,KAAM,IAERhI,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sCAAb,gBACAH,EAAAC,EAAAC,cAACiJ,EAAD,CACE9B,OAAO,UACPL,UAAU,UACVa,SAAU,EACVC,SAAU,EACVE,KAAM,MAERhI,EAAAC,EAAAC,cAACoJ,EAAD,CACEjC,OAAO,OACPL,UAAU,SAEZhH,EAAAC,EAAAC,cAACoJ,EAAD,CACEjC,OAAO,SACPL,UAAU,WAEZhH,EAAAC,EAAAC,cAACiJ,EAAD,CACE9B,OAAO,gBACPL,UAAU,cACVa,SAAU,EACVC,SAAU,GACVE,KAAM,aAtEU9G,IAAMC,eAmFrBC,cAJS,SAACC,GAAD,MAAsC,CAC5DjC,eAAgBiC,EAAME,gBAAgBC,QAAQpC,iBAK9C,GAFagC,CAGb2H,aHrGGR,iDAKYA,QIDFgB,EAJOzH,OAAO0H,OAAO,CAChCC,MAAO,IACPpJ,OAAQ,wBC2BGqJ,EAjBmC,SAACvK,GAC/C,IAAMwK,EAAmBtD,YAAY,SAAChF,GAAD,OAAyB+F,cAAI/F,EAAME,gBAAgBC,QAAQpC,eAAgBD,EAAM6H,aAChHvF,EAAW6E,cACXC,EAAoBC,sBAAY,SAAC3H,EAAcuF,GAAf,OAAkC3C,EAAS9C,EAAwB,CAAEE,OAAMuF,YAAW,CAAC3C,IAM7H,OACIzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAchB,EAAMkI,QACpCrH,EAAAC,EAAAC,cAAC0J,EAAA3J,EAAD,CAAQE,UAAU,YAAY+D,SAPX,SAACyF,GACxBpD,EAAkBpH,EAAM6H,UAAW2C,IAM6BA,QAASA,MCX3EE,mLAGE,OACI7J,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAC4J,EAAD,CACIzC,OAAO,oBACPL,UAAU,qBAEb9H,KAAKC,MAAM4K,oBACR/J,EAAAC,EAAAC,cAACF,EAAAC,EAAMyD,SAAP,KACI1D,EAAAC,EAAAC,cAACgJ,EAAD,CACI7B,OAAO,iBACPL,UAAU,0BACVO,gBAAiBgB,IAErBvI,EAAAC,EAAAC,cAACiJ,EAAD,CACI9B,OAAO,2BACPL,UAAU,iBACVa,SAAU,EACVC,SAAUyB,EAAcE,MACxBzB,KAAM,IAEVhI,EAAAC,EAAAC,cAACiJ,EAAD,CACI9B,OAAO,yBACPL,UAAU,eACVa,SAAU,EACVC,SAAUyB,EAAcE,MACxBzB,KAAM,IAEVhI,EAAAC,EAAAC,cAACiJ,EAAD,CACI9B,OAAO,qBACPL,UAAU,gBACVa,SAAU,EACVC,SAAU,GACVE,KAAM,KAEVhI,EAAAC,EAAAC,cAACiJ,EAAD,CACI9B,OAAO,2BACPL,UAAU,cACVa,SAAU,EACVC,SAAU,IACVE,KAAM,aA1CD9G,IAAMC,eAsDxBC,cAJS,SAACC,GAAD,MAAsC,CAC1D0I,mBAAoB1I,EAAME,gBAAgBC,QAAQpC,eAAe4K,mBAKjE,GAFW5I,CAGbyI,qBCrDII,qNAEMC,SAAWhJ,IAAMiJ,8FAEE,IACfC,EAAYlL,KAAKC,MAAjBiL,QACR,OAAOA,GAAWC,IAAeC,qBAAqBF,8CAIlDlL,KAAKgL,UAAYhL,KAAKgL,SAASnD,SAC/B7H,KAAKgL,SAASnD,QAAQwD,0CAIrB,IAAAjH,EAAApE,KACL,OACIc,EAAAC,EAAAC,cAACF,EAAAC,EAAMyD,SAAP,KACI1D,EAAAC,EAAAC,cAAA,UAAQrB,KAAK,SAASsB,UAAU,0CAA0CoE,cAAY,QAAQC,cAAY,gBAA1G,gBACAxE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAad,GAAG,cAAcsE,UAAW,EAAGC,KAAK,SAASC,kBAAgB,mBAAmBC,cAAY,QACpH9D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeyD,KAAK,YAC/B5D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcd,GAAG,oBAA/B,6BACAW,EAAAC,EAAAC,cAAA,UAAQrB,KAAK,SAASsB,UAAU,QAAQ4D,eAAa,QAAQC,aAAW,SACpEhE,EAAAC,EAAAC,cAAA,QAAM4D,cAAY,QAAlB,UAGR9D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,YAAUkE,MAAOlF,KAAKsL,mBAAoBC,UAAQ,EAAC9D,IAAKzH,KAAKgL,SAAU/J,UAAU,uCAAuCG,QAAS,kBAAMgD,EAAKoH,uBAEhJ1K,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,UAAQrB,KAAK,SAASsB,UAAU,kBAAkB4D,eAAa,SAA/D,oBAhCR7C,IAAMC,gBAiDfC,cALS,SAACC,GAErB,MAAO,CAAE1B,YADe0B,EAAME,gBAAgBC,QAAtC7B,cAMR,GAFWyB,CAGb6I,qBCrCaU,EAjBb,SAAAA,EAAYtL,GAAayC,OAAAC,EAAA,EAAAD,CAAA5C,KAAAyL,GAAAzL,KAdzB0L,UAcwB,EAAA1L,KAbxB2L,mBAawB,EAAA3L,KAZxB4L,UAYwB,EAAA5L,KAXxB6L,QAWwB,EAAA7L,KAVxB8L,cAUwB,EAAA9L,KATxB+L,iBASwB,EAAA/L,KARxBgM,cAQwB,EAAAhM,KAPxBiM,cAOwB,EAAAjM,KANxBkM,gBAMwB,EAAAlM,KALxBmM,SAKwB,EAAAnM,KAJxBoM,WAIwB,EAAApM,KAHxBqM,UAGwB,EAAArM,KAFxBsM,OAEwB,EACtBtM,KAAK0L,KAAO,IAAMvL,EAClBH,KAAK2L,cAAgB,KACrB3L,KAAK4L,KAAO,EACZ5L,KAAK6L,GAAK,IACV7L,KAAK8L,SAAW,MAChB9L,KAAK+L,YAAc,aACnB/L,KAAKgM,SAAW,SAChBhM,KAAKiM,SAAW,MAChBjM,KAAKkM,WAAa,gBAClBlM,KAAKmM,IAAM,EACXnM,KAAKoM,MAAQ,KACbpM,KAAKqM,KAAO,SACZrM,KAAKsM,EAAI,GCxBAC,EAAb,WAkBI,SAAAA,IAAe3J,OAAAC,EAAA,EAAAD,CAAA5C,KAAAuM,GAAAvM,KAhBfwM,SAgBc,EAAAxM,KAfdyM,YAec,EAAAzM,KAdd4B,UAcc,EAAA5B,KAbdkK,gBAac,EAAAlK,KAZd0M,mBAYc,EAAA1M,KAXd2M,eAWc,EAAA3M,KAVd4M,eAUc,EAAA5M,KATd6M,gBASc,EAAA7M,KARd8M,aAQc,EAAA9M,KAPd+M,iBAOc,EAAA/M,KANdqM,UAMc,EAAArM,KALdgN,YAKc,EAAAhN,KAJdwB,UAIc,EAAAxB,KAHd8K,sBAGc,EAAA9K,KAFdiN,UAAuB,IAAIxB,EAAUzL,KAAKyM,QAGtCzM,KAAKwM,IAAMD,EAAOW,SAClBlN,KAAKyM,OAAS,SAAWzM,KAAKG,GAC9BH,KAAK4B,KAAO,UAAY5B,KAAKG,GAC7BH,KAAKkK,WAAa,SAClBlK,KAAK0M,cAAgB,YACrB1M,KAAK2M,UAAY,GACjB3M,KAAK4M,UAAY,IACjB5M,KAAK6M,WAAa,EAClB7M,KAAK8M,QAAU,EACf9M,KAAK+M,YAAc,EACnB/M,KAAKqM,KAAO,GACZrM,KAAKgN,OAAS,GACdhN,KAAKwB,KAAO,GACZxB,KAAK8K,kBAAmB,EACxB9K,KAAKiN,UAAY,IAAIxB,EAAUzL,KAAKyM,QACpCF,EAAOW,WAlCf,OAAAtK,OAAAuK,EAAA,EAAAvK,CAAA2J,EAAA,EAAA5K,IAAA,KAAAyL,IAAA,SAoCWC,GACHrN,KAAKwM,IAAMa,EACXrN,KAAKyM,OAAS,SAAWY,OACP7K,IAAdxC,KAAK4B,OAAoB5B,KAAK4B,KAAO,UAAYyL,QAC9B7K,IAAnBxC,KAAKiN,YAAyBjN,KAAKiN,UAAUvB,KAAO,IAAM1L,KAAKyM,SAxC3EvE,IAAA,WA2CuB,OAAOlI,KAAKwM,QA3CnCD,EAAA,GAAaA,EACFW,SAAmB,MCqBxBI,cACF,SAAAA,EAAYrN,GAAc,IAAAM,EAAA,OAAAqC,OAAAC,EAAA,EAAAD,CAAA5C,KAAAsN,IACtB/M,EAAAqC,OAAAE,EAAA,EAAAF,CAAA5C,KAAA4C,OAAAG,EAAA,EAAAH,CAAA0K,GAAAtK,KAAAhD,KAAMC,KACDkC,MAAQ,CACTyB,SAAU,qBACVM,YAAa,GACbqJ,iBAAiB,EACjBC,iBAAkB,IANAjN,gFAUT0E,GAAU,IAAAb,EAAApE,KACvB,QAA4BwC,IAAxByC,EAAI5B,OAAOC,MAAM,GAArB,CAEA,IAAIC,EAAa0B,EAAI5B,OAAOC,MAAM2B,EAAI5B,OAAOC,MAAME,OAAS,GACxDiK,EAAS,IAAIvK,WACjBuK,EAAOzJ,OAAS,WACZ,IAAI0J,EAAUD,EAAOxJ,OACrBG,EAAKT,SAAS,CAAEO,YAAawJ,KAEjCD,EAAO1J,WAAWR,EAAM,SACxBvD,KAAK2D,SAAS,CAAEC,SAAUL,EAAK3B,mDAI/B,IAAI+L,GAAe,IAAIC,KAAYC,gBAAgB7N,KAAKmC,MAAM+B,aAC1D4J,EAAoB,GAGxB,IAAK,IAAIC,KAFTnN,QAAQC,IAAI8M,EAAS,WAEPA,EAAQK,SAAU,CAC5B,IAAIC,EAAYN,EAAQK,SAASD,GACjC,GAAI/N,KAAKkO,SAASD,GACdH,EAAQK,KAAKnO,KAAKoO,oBAAoBH,QACnC,IAAqC,YAAjCA,EAAUrM,KAAKyM,cAEnB,CACH,IAAIC,EAAc,8BAAgCL,EAAUrM,KAAO,KAEnE,YADA5B,KAAK2D,SAAS,CAAEC,SAAU,qBAAsB2J,iBAAiB,EAAMC,iBAAkBc,IAHzFtO,KAAKuO,qBAAqBN,EAAWH,GAMzC9N,KAAKC,MAAMuO,sBAAsBV,GAErC9N,KAAK2D,SAAS,CAAE4J,iBAAiB,EAAO3J,SAAU,qBAAsB4J,iBAAkB,gEAGrFS,GACL,IAAK,IAAIF,KAAKlO,EACV,GAAIA,EAAYkO,GAAGM,gBAAkBJ,EAAUrM,KAAKyM,cAAe,OAAO,EAE9E,OAAO,8CAGSJ,GAChB,IAAIQ,EAAyB,IAAIlC,EACjC,IAAK,IAAImC,KAAeT,EAAUU,WAAY,CAC1C,IAAIC,EAAMX,EAAUU,WAAWD,GAEX,SAAhBA,EACAD,EAAOpC,KAAKwC,IAAMD,EACG,cAAhBF,EACLD,EAAO9B,UAAYmC,SAASF,GACP,cAAhBF,EACLD,EAAO7B,UAAYkC,SAASF,GACP,eAAhBF,EACLD,EAAO5B,WAAaiC,SAASF,GACR,eAAhBF,EACLD,EAAOvE,WAAa0E,EACC,YAAhBF,EACLD,EAAO3B,QAAUiC,WAAWH,GACP,iBAAhBF,EACLD,EAAO1B,YAAcgC,WAAWH,GACX,SAAhBF,EACLD,EAAOjN,KAAOsN,SAASF,GACF,WAAhBF,EACLD,EAAOzB,OAAO6B,IAAMD,EACnBH,EAAOC,GAAeE,EAE/B,OAAOH,+CAGUR,EAAgBH,GAA2B,IAAAkB,EAAA,SACnDjB,GACA,IAAMD,EAAQC,GAAGtB,SAAYwB,EAAUU,WAAWjD,MACnD9I,OAAO2F,KAAK0F,EAAUU,YAAYM,QAAQ,SAAUtN,EAAKuN,GACzC,mBAARvN,EACAmM,EAAQC,GAAGd,UAAUtB,cAAgBsC,EAAUU,WAAWhN,GAC7C,QAARA,EACLmM,EAAQC,GAAGd,UAAUpB,GAAKoC,EAAUU,WAAWhN,GAClC,SAARA,EACLmM,EAAQC,GAAGd,UAAUrB,KAAOqC,EAAUU,WAAWhN,GAChDmM,EAAQC,GAAGd,UAAUtL,GAAOsM,EAAUU,WAAWhN,MATlE,IAAK,IAAIoM,KAAKD,EAASkB,EAAdjB,oCAeJ,IAAAoB,EAAAnP,KACL,OACIc,EAAAC,EAAAC,cAACF,EAAAC,EAAMyD,SAAP,KACI1D,EAAAC,EAAAC,cAAA,UAAQrB,KAAK,SAASsB,UAAU,4CAA4CoE,cAAY,QAAQC,cAAY,gBAA5G,gBACAxE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAad,GAAG,cAAcsE,UAAW,EAAGC,KAAK,SAASC,kBAAgB,mBAAmBC,cAAY,QACpH9D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeyD,KAAK,YAC/B5D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcd,GAAG,oBAA/B,6BACAW,EAAAC,EAAAC,cAAA,UAAQrB,KAAK,SAASsB,UAAU,QAAQ4D,eAAa,QAAQC,aAAW,SACpEhE,EAAAC,EAAAC,cAAA,QAAM4D,cAAY,QAAlB,UAGR9D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAmBd,GAAG,yBAAtC,WAEJW,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOrB,KAAK,OAAOsB,UAAU,oBAAoBd,GAAG,mBAAmB4E,mBAAiB,wBACpFC,SAAU,SAACC,GAAD,OAASkK,EAAKhM,iBAAiB8B,IAAM7D,QAAS,SAACgC,GAAiBA,EAAMC,OAAO6B,MAAQ,QACnGpE,EAAAC,EAAAC,cAAA,SAAOC,UAAU,qBAAqBjB,KAAKmC,MAAMyB,aAI7D9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,UAAQrB,KAAK,SAASsB,UAAU,kBAAkB4D,eAAa,QAAQzD,QAAS,kBAAM+N,EAAKC,qBAA3F,sBA1HRpN,IAAMC,eAyIfC,cACX,KANuB,SAACK,GACxB,MAAO,CACHiM,sBAAuB,SAACa,GAAD,OAAmC9M,ElBhCvB,SAAC8M,GAAD,MAAiE,CACxG1P,KDtH4C,2BCuH5CC,QAAS,CAAEyP,wBkB8B4DC,CAA4BD,OAGxFnN,CAGboL,GC9IaiC,OAtBf,SAAoBtP,GAChB,IAAMgN,EAAYhN,EAAMgN,UACxB,OACInM,EAAAC,EAAAC,cAAA,WACI0K,KAAMuB,EAAUvB,KAChBC,mBAAuCnJ,IAAxBvC,EAAM0L,cAA8BsB,EAAUtB,cAAgB1L,EAAM0L,cACnFC,UAAqBpJ,IAAfvC,EAAM2L,KAAqBqB,EAAUrB,KAAO3L,EAAM2L,KACxDC,QAAiBrJ,IAAbvC,EAAM4L,GAAmBoB,EAAUpB,GAAK5L,EAAM4L,GAClDC,SAAUmB,EAAUnB,SACpBC,YAAakB,EAAUlB,YACvBC,SAAUiB,EAAUjB,SACpBC,SAAUgB,EAAUhB,SACpBC,WAAYe,EAAUf,WACtBC,IAAG,GAAAtI,OAAKoJ,EAAUd,IAAf,KACHC,MAAOa,EAAUb,MACjBC,KAAMY,EAAUZ,KAChBmD,IAAOvC,EAAUpB,GACjB4D,MAASxC,EAAUrB,KACnB8D,eAAkBzC,EAAUtB,iBCEzBgE,OApBf,SAA4B1P,GACxB,IAAMgN,EAAYhN,EAAMgN,UAClBX,EAAIW,EAAUX,EACdsD,EAAK,EAAItD,EACTuD,EAAO,YAAcvD,EAAI,SAAWA,EAAI,IAAMA,EAAI,UAAYsD,EAAK,QAAUtD,EAAI,IAAMA,EAAI,WAAasD,EAAK,KAEnH,OACI9O,EAAAC,EAAAC,cAACF,EAAAC,EAAMyD,SAAP,KACqB,IAAhByI,EAAUX,GACPxL,EAAAC,EAAAC,cAAA,iBACImL,IAAG,GAAAtI,OAAKoJ,EAAUd,IAAf,KACHC,MAAOa,EAAUb,MACjBC,KAAMY,EAAUZ,KAChBN,YAAakB,EAAUlB,YACvB8D,KAAMA,MCeXC,OA3Bf,SAAmB7P,GACf,IAAMwO,EAASxO,EAAMwO,OACf3D,EAAmB2D,EAAO3D,iBAChC,OACIhK,EAAAC,EAAAC,cAACF,EAAAC,EAAMyD,SAAP,KACI1D,EAAAC,EAAAC,cAAA,UAAQE,MAAO,CAAE6O,OAAQ,WACrB5P,GAAIsO,EAAOhC,OACXK,QAAS2B,EAAO3B,QAChBT,KAAMoC,EAAOpC,KAAKwC,IAClB7B,OAAQyB,EAAOzB,OAAO6B,IACtB9B,YAAa0B,EAAO1B,YACpBiD,GAAIvB,EAAO9B,UACXsD,GAAIxB,EAAO7B,UACXN,EAAGmC,EAAOjN,KACVkK,KAAM+C,EAAO/C,KACbwE,WAAYzB,EAAOvE,WACnBtI,KAAM6M,EAAO7M,KACbuO,UAAW1B,EAAO9B,UAClByD,UAAW3B,EAAO7B,UAClBpL,KAAMiN,EAAOjN,MAEZsJ,GAAoBhK,EAAAC,EAAAC,cAACqP,GAAD,CAAoBpD,UAAWwB,EAAOxB,aAE9DnC,GAAoBhK,EAAAC,EAAAC,cAACsP,GAAD,CAAYrD,UAAWwB,EAAOxB,cCO/D,SAASsD,GAAgB9B,GACrB,MAAuC,OAAnCA,EAAOxB,UAAUtB,cACV6E,GAAoB/B,EAAO9B,UAAYmC,SAASL,EAAOxB,UAAUpB,IAAK4C,EAAO7B,UAAW6B,EAAOjN,KAAMiN,EAAO5B,YAChF,OAAnC4B,EAAOxB,UAAUtB,cACV6E,GAAoB/B,EAAO9B,UAAW8B,EAAO7B,UAAYkC,SAASL,EAAOxB,UAAUpB,IAAK4C,EAAOjN,KAAMiN,EAAO5B,iBADvH,EAIJ,SAAS2D,GAAoBC,EAASC,EAASC,GAC3C,IAAIC,EAAe,GAKnB,OAJAA,EAAazC,KAAKW,SAAS2B,EAAUE,EAAa,GAAI7B,SAAS4B,EAAUC,EAAa,IACtFC,EAAazC,KAAKW,SAAS2B,EAAUE,EAAa,GAAI7B,SAAS4B,EAAUC,EAAa,IACtFC,EAAazC,KAAKW,SAAS2B,EAAUE,EAAa,GAAI7B,SAAS4B,EAAUC,EAAa,IACtFC,EAAazC,KAAKW,SAAS2B,EAAUE,EAAa,GAAI7B,SAAS4B,EAAUC,EAAa,IAC/EC,EAGIC,OA9Cf,SAAmB5Q,GACf,IAAMwO,EAASxO,EAAMwO,OACf3D,EAAmB2D,EAAO3D,iBAChC,OACIhK,EAAAC,EAAAC,cAACF,EAAAC,EAAMyD,SAAP,KACI1D,EAAAC,EAAAC,cAAA,WAASE,MAAO,CAAE6O,OAAQ,WACtB5P,GAAIsO,EAAOhC,OACXK,QAAS2B,EAAO3B,QAChBT,KAAMoC,EAAOpC,KAAKwC,IAClB7B,OAAQyB,EAAOzB,OAAO6B,IACtB9B,YAAa0B,EAAO1B,YACpBN,OAAQgC,EAAOhC,OACf7K,KAAM6M,EAAO7M,KACbsO,WAAYzB,EAAOvE,WACnBiG,UAAW1B,EAAO9B,UAClByD,UAAW3B,EAAO7B,UAClBkE,WAAYrC,EAAO5B,WACnBrL,KAAMiN,EAAOjN,MAEZsJ,GAAoBhK,EAAAC,EAAAC,cAACqP,GAAD,CAAoBpD,UAAWwB,EAAOxB,aAE9DnC,GAAoBhK,EAAAC,EAAAC,cAACsP,GAAD,CAAYrD,UAAWwB,EAAOxB,UAC/CtB,cAAc,SACdC,KAAM4E,GAAoB/B,EAAO9B,UAAW8B,EAAO7B,UAAW6B,EAAOjN,MACrEqK,GAAI0E,GAAgB9B,OCOpC,SAAS8B,GAAgB9B,GACrB,MAAuC,OAAnCA,EAAOxB,UAAUtB,cACV6E,GAAoB/B,EAAO9B,UAAYmC,SAASL,EAAOxB,UAAUpB,IAAK4C,EAAO7B,UAAW6B,EAAOjN,KAAMiN,EAAO5B,YAChF,OAAnC4B,EAAOxB,UAAUtB,cACV6E,GAAoB/B,EAAO9B,UAAW8B,EAAO7B,UAAYkC,SAASL,EAAOxB,UAAUpB,IAAK4C,EAAOjN,KAAMiN,EAAO5B,iBADvH,EAIJ,SAAS2D,GAAoBC,EAASC,EAASK,EAAQlE,GAEnD,IADA,IAAImE,EAAgB,GACXjD,EAAI,EAAGA,EAAIlB,EAAYkB,IAC5BiD,EAAc7C,KAAKW,SAAS2B,EAAUM,EAAS5H,KAAK8H,IAAI,EAAI9H,KAAK+H,GAAKnD,EAAIlB,IACtEiC,SAAS4B,EAAUK,EAAS5H,KAAKgI,IAAI,EAAIhI,KAAK+H,GAAKnD,EAAIlB,KAE/D,OAAOmE,EAGII,OA/Cf,SAAoBnR,GAChB,IAAMwO,EAASxO,EAAMwO,OACf3D,EAAmB2D,EAAO3D,iBAChC,OACIhK,EAAAC,EAAAC,cAACF,EAAAC,EAAMyD,SAAP,KACI1D,EAAAC,EAAAC,cAAA,WAASE,MAAO,CAAE6O,OAAQ,WACtB5P,GAAIsO,EAAOhC,OACXK,QAAS2B,EAAO3B,QAChBT,KAAMoC,EAAOpC,KAAKwC,IAClB7B,OAAQyB,EAAOzB,OAAO6B,IACtB9B,YAAa0B,EAAO1B,YACpBN,OAAQgC,EAAOhC,OACf7K,KAAM6M,EAAO7M,KACbsO,WAAYzB,EAAOvE,WACnBiG,UAAW1B,EAAO9B,UAClByD,UAAW3B,EAAO7B,UAClBkE,WAAYrC,EAAO5B,WACnBrL,KAAMiN,EAAOjN,MAEZsJ,GAAoBhK,EAAAC,EAAAC,cAACqP,GAAD,CAAoBpD,UAAWwB,EAAOxB,aAE9DnC,GACGhK,EAAAC,EAAAC,cAACsP,GAAD,CAAYrD,UAAWwB,EAAOxB,UAC1BtB,cAAc,SACdC,KAAM4E,GAAoB/B,EAAO9B,UAAW8B,EAAO7B,UAAW6B,EAAOjN,KAAMiN,EAAO5B,YAClFhB,GAAI0E,GAAgB9B,yLCjBxC,IAAM4C,GAAOC,KAAOC,IAAVC,KACI,SAACvR,GAAD,OAAsBA,EAAMwR,SAAW,UAAY,YAgB3DC,8MAEFC,eAAiB,SAACvO,GAAe,IAAA5C,EACgBD,EAAKN,MAA1C2R,EADqBpR,EACrBoR,QAASC,EADYrR,EACZqR,QAASC,EADGtR,EACHsR,OAAQC,EADLvR,EACKuR,OAC9BH,GAAWxO,EAAM4O,SAAyB,MAAd5O,EAAMzB,IAClCmQ,IACOD,GAAWzO,EAAM4O,SAAW5O,EAAM6O,UAA0B,MAAd7O,EAAMzB,KAC3DoQ,wFAKJ9L,SAASiM,iBAAiB,UAAWlS,KAAK2R,iDAGrC,IAAAQ,EACwCnS,KAAKC,MAA1C2R,EADHO,EACGP,QAASC,EADZM,EACYN,QAASC,EADrBK,EACqBL,OAAQC,EAD7BI,EAC6BJ,OAClC,OACIK,EAAA,yBACIA,EAAA,cAACf,GAAD,CAAMI,SAAUG,EAASxQ,QAAS,kBAAMwQ,EAAUE,IAAW,OACzDM,EAAA,cAAC/Q,EAAA,EAAD,CAAiBC,KAAM+Q,IAAQ7Q,KAAK,QAExC4Q,EAAA,cAACf,GAAD,CAAMI,SAAUI,EAASzQ,QAAS,kBAAMyQ,EAAUE,IAAW,OACzDK,EAAA,cAAC/Q,EAAA,EAAD,CAAiBC,KAAMgR,IAAQ9Q,KAAK,gBAvBjCQ,iBA6CRE,eAdS,SAACC,GACrB,MAAO,CACHyP,QAASzP,EAAME,gBAAgBkQ,KAAK/O,OAAS,EAC7CqO,QAAS1P,EAAME,gBAAgBmQ,OAAOhP,OAAS,IAI5B,SAACjB,GACxB,MAAO,CACHuP,OAAQ,kBAAMvP,EAASkQ,kBAAmBC,SAC1CX,OAAQ,kBAAMxP,EAASkQ,kBAAmBE,WAInCzQ,CAGbwP,ICpDIkB,8MAEM1H,QAAUlJ,IAAMiJ,qFAEdhG,GACwC,OAA1CA,EAAI5B,OAAOwP,aAAa,eACxB7S,KAAKC,MAAM6S,sBAAsB7N,EAAI5B,OAAOlD,iDAI/B,IACTM,EAAgBT,KAAKC,MAArBQ,YACR,OAAOA,GAAeA,EAAYgB,IAAI,SAACgN,EAAQV,GAC3C,OAAQU,EAAOvE,YACX,IAAK,SACD,OAAOpJ,EAAAC,EAAAC,cAAC+R,GAAD,CAAWpR,IAAKoM,EAAGU,OAAQA,IAEtC,IAAK,SACD,OAAO3N,EAAAC,EAAAC,cAACgS,GAAD,CAAWrR,IAAKoM,EAAGU,OAAQA,IAEtC,IAAK,UACD,OAAO3N,EAAAC,EAAAC,cAACiS,GAAD,CAAYtR,IAAKoM,EAAGU,OAAQA,IAEvC,QACI,OAAO3N,EAAAC,EAAAC,cAAC+R,GAAD,CAAWpR,IAAKoM,EAAGU,OAAQA,2CAOtC,IAAArK,EAAApE,KACR,OACIc,EAAAC,EAAAC,cAAA,OAAKkS,QAAQ,MAAMzL,IAAKzH,KAAKkL,QAASjK,UAAU,2BAA2BkS,MAAM,6BAA6BC,QAAO,OAAAvP,OAASwG,EAAcE,MAAvB,KAAA1G,OAAgCwG,EAAclJ,QAC/JoJ,MAAM,OACNpJ,OAAO,OACPC,QAAS,SAAC6D,GAAD,OAASb,EAAKiP,UAAUpO,KAChCjF,KAAKsT,uDAOd,OACIxS,EAAAC,EAAAC,cAACF,EAAAC,EAAMyD,SAAP,KACI1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yCAAyCC,MAAO,CAAEC,OAAQ,SACrEL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oCACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,MAAhB,gBACAH,EAAAC,EAAAC,cAACuS,EAAD,CAAWC,MAAO,eAAgBtI,QAASlL,KAAKyT,cAChD3S,EAAAC,EAAAC,cAAC0S,EAAD,QAGP1T,KAAKyT,YACN3S,EAAAC,EAAAC,cAAC2S,GAAD,cAtDQ3R,IAAMC,eAsEfC,eAVS,SAACC,GAAD,MAAsC,CAC1D1B,YAAa0B,EAAME,gBAAgBC,QAAQ7B,cAGpB,SAAC8B,GACxB,MAAO,CACHuQ,sBAAuB,SAACrG,GAAD,OAAoBlK,EzBqBR,SAACkK,GAAD,MAAkD,CACzF9M,KDvG4C,2BCwG5CC,QAAS,CAAE6M,WyBvB6CmH,CAA4BnH,OAIzEvK,CAGb0Q,IChFIiB,sNAEFC,eAAiB,SAAC5O,GACd,OAAOA,IAAU3E,EAAKN,MAAM8T,uBAAyB,SAAW,4EAG3D,IACGC,EAA0BhU,KAAKC,MAA/B+T,sBACR,OACIlT,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yCACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gCAAgCG,QAAS,kBAAM4S,GAAsB,KAC/ElT,EAAAC,EAAAC,cAAA,UAAQC,UAAW,8DAAgEjB,KAAK8T,gBAAe,IAAvG,eAEJhT,EAAAC,EAAAC,cAAA,MAAIC,UAAU,+BAA+BG,QAAS,kBAAM4S,GAAsB,KAC9ElT,EAAAC,EAAAC,cAAA,UAAQC,UAAW,+DAAiEjB,KAAK8T,gBAAe,IAAxG,uBAdO9R,IAAMC,gBA8BlBC,eAVS,SAACC,GAAD,MAAsC,CAC1D4R,uBAAwB5R,EAAM8R,aAAaF,yBAGpB,SAACxR,GACxB,MAAO,CACHyR,sBAAuB,SAACE,GAAD,OAAmB3R,EC1BP,SAAC2R,GAAD,MAA8C,CACrFvU,KClB4C,2BDmB5CC,QAASsU,GDwB8CC,CAA4B,CAACD,aAIzEhS,CAGb2R,IGhCIO,4MAE+BlP,GAC7B,OAAOA,IAAUlF,KAAKC,MAAMoU,sBAAwB,UAAY,oCAG3D,IAAA7T,EACqDR,KAAKC,MAAvDyG,EADHlG,EACGkG,gBAAiB4N,EADpB9T,EACoB8T,6BACzB,OACIxT,EAAAC,EAAAC,cAAA,MAAIC,UAAU,uCAAuCC,MAAO,CAAEC,OAAQ,QAClEL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAoBG,QAAS,kBAAMkT,GAA6B,KAC1ExT,EAAAC,EAAAC,cAAA,UAAQC,UAAW,kEAAoEjB,KAAKuU,0BAAyB,IAArH,aAEgB,MAAnB7N,EACK5F,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBAAqBG,QAAS,kBAAMkT,GAA6B,KAC7ExT,EAAAC,EAAAC,cAAA,UAAQC,UAAW,gFAAkFjB,KAAKuU,0BAAyB,IAAnI,YAEFzT,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACZH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uDAAuDmE,UAAQ,GAAjF,oBAlBYpD,IAAMC,gBAoC3BC,eAXS,SAACC,GAAD,MAAsC,CACtDuE,gBAAiBvE,EAAME,gBAAgBC,QAAQoE,gBAC/C2N,sBAAuBlS,EAAM8R,aAAaI,wBAGvB,SAAC9R,GACxB,MAAO,CACH+R,6BAA8B,SAACJ,GAAD,OAAmB3R,EF5Bb,SAAC2R,GAAD,MAA+C,CACvFvU,KCxB6C,4BDyB7CC,QAASsU,GE0BqDM,CAA6B,CAACN,aAIjFhS,CAGbkS,ICxCIK,+LAGF7T,QAAQC,IAAI,yDAIZD,QAAQC,IAAI,uBADL,IAAAL,EAEmER,KAAKC,MAAvEC,EAFDM,EAECN,eAAgB6T,EAFjBvT,EAEiBuT,uBAAwBM,EAFzC7T,EAEyC6T,sBAChD,OACEvT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4DACbH,EAAAC,EAAAC,cAAC0T,GAAD,MACCL,EACGvT,EAAAC,EAAAC,cAAC2T,EAAD,MACA7T,EAAAC,EAAAC,cAAC4T,EAAD,OAGN9T,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAC6T,GAAD,OAEF/T,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gDACbH,EAAAC,EAAAC,cAAC8T,GAAD,MACC5U,IACE6T,EACGjT,EAAAC,EAAAC,cAAC+T,EAAD,MACAjU,EAAAC,EAAAC,cAACgU,EAAD,iBA3BShT,IAAMC,eA0ClBC,eANS,SAACC,GAAoC,IACnDjC,EAAmBiC,EAAME,gBAAgBC,QAAzCpC,eADmD+U,EAED9S,EAAM8R,aAChE,MAAO,CAAE/T,iBAAgBmU,sBAHkCY,EAEnDZ,sBACwCN,uBAHWkB,EAE5BlB,yBAIlB7R,CAEbuS,IClDkBS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,iGChBAC,GAAsB,CAAC,IAAIhJ,EAAU,IAAIA,EAAU,IAAIA,GAC7DgJ,GAAoB,GAAGlJ,KAAKwC,IAAM,UAClC0G,GAAoB,GAAGlJ,KAAKwC,IAAM,UAClC0G,GAAoB,GAAG5I,UAAY,IACnC4I,GAAoB,GAAGlJ,KAAKwC,IAAM,UAClC0G,GAAoB,GAAG5I,UAAY,IAEnC,IAAM6I,GAAsB,CAAC,IAAIjJ,EAAU,IAAIA,EAAU,IAAIA,GAC7DiJ,GAAoB,GAAGnJ,KAAKwC,IAAM,UAClC2G,GAAoB,GAAGnJ,KAAKwC,IAAM,UAClC2G,GAAoB,GAAG7I,UAAY,IACnC6I,GAAoB,GAAGnJ,KAAKwC,IAAM,UAClC2G,GAAoB,GAAG7I,UAAY,IAEnC,IAAM8I,GAAsB,CAAC,IAAIlJ,EAAU,IAAIA,EAAU,IAAIA,GAC7DkJ,GAAoB,GAAGpJ,KAAKwC,IAAM,UAClC4G,GAAoB,GAAGpJ,KAAKwC,IAAM,UAClC4G,GAAoB,GAAG9I,UAAY,IACnC8I,GAAoB,GAAGpJ,KAAKwC,IAAM,UAClC4G,GAAoB,GAAG9I,UAAY,IAG5B,IAAM+I,GAAqB,CAACH,GAAqBC,GAAqBC,ICrBvEE,GAASC,EAAQ,KAEVC,GAOT,SAAAA,IAAejT,OAAAC,EAAA,EAAAD,CAAA5C,KAAA6V,GAAA7V,KAJfG,QAIc,EAAAH,KAHd4B,UAGc,EAAA5B,KAFdS,iBAEc,EACVT,KAAKG,GAAK0V,EAAQ3I,SAClBlN,KAAK4B,KAAL,WAAAiC,OAAuBgS,EAAQ3I,SAAS4I,OAAO,EAAE,IACjD9V,KAAKS,YAAc,GACnBoV,EAAQ3I,SAAWyI,MAXdE,GAEF3I,SAAmByI,KCyB9B,IAsBaI,GAtB6B,WAExC,IAAMvP,EAAyB5D,OAAAoT,GAAA,EAAApT,CAAIqT,MAAMP,GAAmBlS,SAAS/B,IAAI,SAACyD,EAAOgK,GAC/E,IAAIgH,EAAU,IAAIL,GAElB,OADAK,EAAQzV,YAAciV,GAAmBxG,GAClCgH,IAKT,OAHA1P,EAAY,GAAG5E,KAAO,QACtB4E,EAAY,GAAG5E,KAAO,OACtB4E,EAAY,GAAG5E,KAAO,QACf,CACL4E,YAAaA,EACbE,gBAAiBF,EAAY,GAC7B/F,YAAa+F,EAAY,GAAG/F,YAC5BP,eAAgBsG,EAAY,GAAG/F,YAAY,IAQJ0V,GAC9BC,GAJJ,CAAE/B,uBAAuB,EAAMN,wBAAwB,GCtCzD,SAASsC,GAA2CC,EAAYC,GACnE,OAAOD,EAAME,OAAO,SAAC9U,EAAMwN,GACvB,OAAIxN,EAAKvB,KAAOoW,IAOjB,SAASE,GAAoC/U,EAASvB,GACzD,OAAgB,OAATuB,GACDA,EAAKvB,KAAOA,EAMf,SAASuW,GAAuCJ,EAAaK,EAAwBC,GACxF,OAAON,EAAMO,KAAK,SAAAnV,GAAI,OAAIA,EAAKiV,KAAkBC,IAG9C,SAASE,GAAgBC,EAAcC,GAC1C,OAAOpU,OAAOqU,OAAO,GAAIF,EAAWC,GAGjC,SAASE,GAAmBC,GAC/B,OAAOC,oBAAUD,GC+DrB,SAASE,GAAmBlV,EAA6B1B,GAAqC,IAAA6W,EACjDJ,GAAgB/U,GAAjDqE,EADkF8Q,EAClF9Q,YAAaE,EADqE4Q,EACrE5Q,gBACjB6Q,EAA+B/Q,EAAYgR,UAAU,SAAAtB,GAAO,OAAIA,EAAQ/V,KAAOuG,EAAgBvG,KAGnG,OAFAqG,EAAY+Q,GAAsB9W,YAAcA,EAChDiG,EAAgBjG,YAAcA,EACvB,CAAE+F,cAAaE,mBAiG1B,IA0Ce+Q,GAJiBC,KAtCR,WAAqI,IAApIvV,EAAoIwV,UAAAnU,OAAA,QAAAhB,IAAAmV,UAAA,GAAAA,UAAA,GAAtG5B,GAA6B6B,EAAyED,UAAAnU,OAAA,EAAAmU,UAAA,QAAAnV,EAEzJ,OAAQoV,EAAOjY,MACX,IrCnM4C,+BqCoMxC,OAtMZ,SAAmCwC,EAA6ByV,GAA+D,IACnHpR,EAAgB0Q,GAAgB/U,GAAhCqE,YACJqR,EAA4B/R,KAAKgS,MAAMF,EAAOhY,QAAQsE,aAAuBL,OAAO2C,GACxF,OAAO5D,OAAAmV,GAAA,EAAAnV,CAAA,GACAT,EADP,CAEIqE,YAAaqR,IAiMF1S,CAA0BhD,EAAOyV,GAC5C,IrCtMwC,2BqCuMpC,OA/LZ,SAA+BzV,EAA6ByV,GAAqC,IACrFvI,EAAwBuI,EAAOhY,QAA/ByP,oBADqF2I,EAEpDX,GAAmBlV,EAAOkN,GACnE,OAAOyH,GAAa3U,EAAO,CAAEqE,YAHgEwR,EAErFxR,YAC+CE,gBAHsCsR,EAExEtR,gBACmDjG,YAAa4O,IA4LtEb,CAAsBrM,EAAOyV,GACxC,IrCzMwC,2BqC0MpC,OA3LZ,SAA+BzV,EAA6ByV,GAAqC,IACrFnL,EAAWmL,EAAOhY,QAAlB6M,OAGR,OAAOqK,GAAa3U,EAAO,CAAEjC,eADRwW,GADGQ,GAAgB/U,GAAhC1B,YAC0C,SAAUgM,KAwL7CqG,CAAsB3Q,EAAOyV,GACxC,IrCjN0B,aqCkNtB,OAtLZ,SAAmBzV,GACf,OAAOS,OAAAmV,GAAA,EAAAnV,CAAA,GACAT,EADP,CAEI1B,YAAW,GAAAoD,OAAAjB,OAAAoT,GAAA,EAAApT,CACJT,EAAM1B,aADF,CAEP,IAAI8L,MAiLG7L,CAAUyB,GAErB,IrClN6B,gBqCmNzB,OA/KZ,SAAsBA,EAA6ByV,GAA4B,IACnEzX,EAAOyX,EAAOhY,QAAdO,GACAD,EAAmBgX,GAAgB/U,GAAnCjC,eACJO,EAAc4V,GAAoBlU,EAAM1B,YAAaN,GACrD8X,EAAmBxB,GAAavW,EAAgBC,GAJuB+X,EAKlCb,GAAmBlV,EAAO1B,GACnE,OAAOqW,GAAa3U,EAAO,CACvB1B,YAAaA,EACbP,eAAgB+X,EAAmB,KAAO/X,EAC1CsG,YATuE0R,EAKnE1R,YAKJE,gBAVuEwR,EAKtDxR,kBA0KNpG,CAAa6B,EAAOyV,GAE/B,IrCnNkC,qBqCoN9B,OApKZ,SAA0BzV,EAA6ByV,GACnD,IAAI1X,EAAiBwW,GAAgBvU,EAAM1B,YAAa,KAAMmX,EAAOhY,QAAQO,IAE7E,OADAS,QAAQC,IAAIX,GACL4W,GAAa3U,EAAO,CAAEjC,eAAgBA,IAiK9BS,CAAiBwB,EAAOyV,GAEnC,IrCzN2B,cqC0NvB,OAjKZ,SAAoBzV,GAChB,OAAOS,OAAAmV,GAAA,EAAAnV,CAAA,GACAT,EADP,CAEIqE,YAAW,GAAA3C,OAAAjB,OAAAoT,GAAA,EAAApT,CACJT,EAAMqE,aADF,CAEP,IAAIqP,OA4JGjP,CAAWzE,GAEtB,IrC1N8B,iBqC2N1B,OA1JZ,SAAuBA,EAA6ByV,GAA6B,IACrEzX,EAAOyX,EAAOhY,QAAdO,GADqEgY,EAEpBjB,GAAgB/U,GAAjEuE,EAFqEyR,EAErEzR,gBAAiBjG,EAFoD0X,EAEpD1X,YAAaP,EAFuCiY,EAEvCjY,eAClCsG,EAAc6P,GAAoBlU,EAAMqE,YAAarG,GACrDiY,EAAoB3B,GAAa/P,EAAiBvG,GACtD,OAAO2W,GAAa3U,EAAO,CACvBqE,YAAaA,EACbE,gBAAiB0R,EAAoB,KAAO1R,EAC5CjG,YAAa2X,EAAoB,GAAK3X,EACtCP,eAAgBkY,EAAoB,KAAOlY,IAiJhCyG,CAAcxE,EAAOyV,GAEhC,IrC3NmC,sBqC4N/B,OAhJZ,SAA2BzV,EAA6ByV,GACpD,IAAIlR,EAAuCgQ,GAAgBvU,EAAMqE,YAAa,KAAMoR,EAAOhY,QAAQO,IAEnG,YAA2BqC,IAApBkE,EACHoQ,GAAa3U,EAAO,CAChBuE,gBAAiBA,EACjBjG,YAAaiG,EAAgBjG,YAC7BP,eAAgB,OAElBiC,EAuIS0E,CAAkB1E,EAAOyV,GAEpC,KAAKpY,EACD,OA1HZ,SAA2B2C,EAA6ByV,GAAiC,IAAAS,EAC7DT,EAAOhY,QAAvBD,EAD6E0Y,EAC7E1Y,KAAMuF,EADuEmT,EACvEnT,MADuEoT,EAE7CpB,GAAgB/U,GAAhDjC,EAF6EoY,EAE7EpY,eAAgBO,EAF6D6X,EAE7D7X,YACxB,OAAQd,GACJ,IAAK,OACDO,EAAe0B,KAAOsD,EACtB,MAEJ,IAAK,aACDhF,EAAegK,WAAahF,EACd,WAAVA,IAAoBhF,EAAe2M,WAAa,GACpD,MAEJ,IAAK,OACD3M,EAAesB,KAAO0D,EACtB,MAEJ,IAAK,YACDhF,EAAeyM,UAAYzH,EAC3B,MAEJ,IAAK,YACDhF,EAAe0M,UAAY1H,EAC3B,MAEJ,IAAK,aACDhF,EAAe2M,WAAa3H,EAC5B,MAEJ,IAAK,UACDhF,EAAe4M,QAAU5H,EACzB,MAEJ,IAAK,OACDhF,EAAemM,KAAOnH,EACtBtE,QAAQC,IAAIqE,EAAO,QACnB,MAEJ,IAAK,SACDhF,EAAe8M,OAAS9H,EACxB,MAEJ,IAAK,cACDhF,EAAe6M,YAAc7H,EAC7B,MAEJ,IAAK,0BACDhF,EAAe+M,UAAUtB,cAAgBzG,EACzC,MAEJ,IAAK,iBACDhF,EAAe+M,UAAUrB,KAAO1G,EAChC,MAEJ,IAAK,eACDhF,EAAe+M,UAAUpB,GAAK3G,EAC9B,MAEJ,IAAK,gBACDhF,EAAe+M,UAAUd,IAAMjH,EAC/B,MAEJ,IAAK,cACDhF,EAAe+M,UAAUX,EAAIpH,EAC7B,MAEJ,IAAK,mBACDhF,EAAe4K,iBAAmB5F,EAQ1CzE,EAAYA,EAAY+W,UAAU,SAAA/I,GAAM,OAAIA,EAAOtO,KAAOD,EAAeC,MAAOD,EA3EK,IAAAqY,EA4E5ClB,GAAmBlV,EAAO1B,GAA3D+F,EA5E6E+R,EA4E7E/R,YAAaE,EA5EgE6R,EA4EhE7R,gBAErB,OAAOoQ,GACH3U,EAAO,CACH1B,YAAaA,EACb+F,YAAaA,EACbtG,eAAgBA,EAChBwG,gBAAiBA,IAuCVW,CAAkBlF,EAAOyV,GAEpC,IrC7NmC,sBqC8N/B,OAtCZ,SAA2BzV,EAA6ByV,GAAiC,IAAAY,EAC5CtB,GAAgB/U,GAAjDqE,EAD6EgS,EAC7EhS,YAAaE,EADgE8R,EAChE9R,gBAGrB,OAFAA,EAAgB9E,KAAOgW,EAAOhY,QAAQgC,KACtC4E,EAAYA,EAAYgR,UAAU,SAAAtB,GAAO,OAAIA,EAAQ/V,KAAOuG,EAAgBvG,MAAOuG,EAC5EoQ,GAAa3U,EAAO,CAAEqE,YAAaA,EAAaE,gBAAiBA,IAkCzD+R,CAAkBtW,EAAOyV,GAEpC,QACI,OAAOzV,IAIuC,CACtDqU,OAAQkC,yBAAc,CrC1OiB,sBADD,qBAEM,+BsCNnCC,GAAeC,2BAAgB,CAAEvW,mBAAgB4R,aCC/C,WAA4G,IAAlG9R,EAAkGwV,UAAAnU,OAAA,QAAAhB,IAAAmV,UAAA,GAAAA,UAAA,GAAvEvB,GAAmBwB,EAAoDD,UAAAnU,OAAA,EAAAmU,UAAA,QAAAnV,EACvH,OAAQoV,EAAOjY,MACX,IVNwC,2BUOpC,OAAOmX,GAAgC3U,EAAO,CAAE4R,uBAAwB6D,EAAOhY,QAAQsU,OAE3F,IVVyC,4BUWrC,OAAO4C,GAAgC3U,EAAO,CAAEkS,sBAAuBuD,EAAOhY,QAAQsU,OAE1F,QACI,OAAO/R,gBCVJ0W,0BAAYF,GAAaG,kCCMlCC,GAAc9S,SAAS+S,eAAe,QAC5CC,IAASC,OACLpY,EAAAC,EAAAC,cAACmY,EAAA,EAAD,CAAUC,MAAOA,IACbtY,EAAAC,EAAAC,cAACqY,GAAD,OAEJN,ITkHE,kBAAmBO,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.39ac7d3f.chunk.js","sourcesContent":["export const CHANGE_PROJECT_REACTION_TYPE: string = \"CHANGE_PROJECT_REACTION_TYPE\";\r\nexport const ENABLE_ANIMATION: string = \"ENABLE_ANIMATION\";\r\nexport const CHANGE_FIGURE_VALUE: string = \"CHANGE_FIGURE_VALUE\";\r\nexport const UPDATE_PROJECT_STATE: string = \"UPDATE_PROJECT_STATE\";\r\nexport const ADD_FIGURE: string = \"ADD_FIGURE\";\r\nexport const ADD_PROJECT: string = \"ADD_PROJECT\";\r\nexport const DELETE_FIGURE: string = \"DELETE_FIGURE\";\r\nexport const DELETE_PROJECT: string = \"DELETE_PROJECT\";\r\nexport const SHOW_FIGURE_EDITOR: string = \"SHOW_FIGURE_EDITOR\";\r\nexport const SET_CURRENT_PROJECT: string = \"SET_CURRENT_PROJECT\";\r\nexport const CHANGE_ACTIVE_SVG_FIGURE: string = \"CHANGE_ACTIVE_SVG_FIGURE\";\r\nexport const IMPORT_FIGURES_FROM_FILE: string = \"IMPORT_FIGURES_FROM_FILE\";\r\nexport const HANDLE_IMPORTED_PROJECT_FILE: string = \"HANDLE_IMPORTED_PROJECT_FILE\";\r\nexport const CHANGE_PROJECT_NAME: string = \"CHANGE_PROJECT_NAME\";\r\n\r\n","import { CHANGE_FIGURE_VALUE, ADD_PROJECT, DELETE_PROJECT, SET_CURRENT_PROJECT, DELETE_FIGURE, ADD_FIGURE, SHOW_FIGURE_EDITOR, CHANGE_ACTIVE_SVG_FIGURE, IMPORT_FIGURES_FROM_FILE, HANDLE_IMPORTED_PROJECT_FILE, CHANGE_PROJECT_NAME } from \"./actionTypes\";\r\nimport { Action } from \"redux\";\r\nimport { Figure } from \"../../../static/Figure\";\r\n\r\n\r\ntype FigureValue = {\r\n    type: string,\r\n    value: string | number | boolean\r\n}\r\n\r\nexport interface ChangeFigureValueAction extends Action {\r\n    type: typeof CHANGE_FIGURE_VALUE,\r\n    payload: FigureValue\r\n}\r\n\r\nexport function changeFigureValueAction(figureValue: FigureValue): ChangeFigureValueAction {\r\n    return {\r\n        type: CHANGE_FIGURE_VALUE,\r\n        payload: figureValue\r\n    }\r\n}\r\n\r\n\r\n\r\nexport interface AddProjectAction extends Action {\r\n    type: typeof ADD_PROJECT,\r\n    payload: undefined\r\n}\r\n\r\nexport const addProjectAction = (): AddProjectAction => ({\r\n    type: ADD_PROJECT,\r\n    payload: undefined\r\n});\r\n\r\n\r\ntype Uuid = {\r\n    id: string\r\n}\r\nexport interface DeleteProjectAction extends Action {\r\n    type: typeof DELETE_PROJECT,\r\n    payload: Uuid\r\n}\r\n\r\nexport const deleteProjectAction = (id: Uuid): DeleteProjectAction => ({\r\n    type: DELETE_PROJECT,\r\n    payload: id\r\n});\r\n\r\n\r\n\r\nexport interface SetCurrentProjectAction extends Action {\r\n    type: typeof SET_CURRENT_PROJECT,\r\n    payload: Uuid\r\n}\r\n\r\n\r\nexport const setCurrentProjectAction = (id: Uuid): SetCurrentProjectAction => ({\r\n    type: SET_CURRENT_PROJECT,\r\n    payload: id\r\n});\r\n\r\n\r\n\r\nexport interface AddFigureAction extends Action {\r\n    type: typeof ADD_FIGURE,\r\n    payload: undefined\r\n}\r\n\r\nexport const addFigureAction = (): AddFigureAction => ({\r\n    type: ADD_FIGURE,\r\n    payload: undefined\r\n});\r\n\r\n\r\n\r\ntype Id = {\r\n    id: number;\r\n}\r\n\r\nexport interface DeleteFigureAction extends Action {\r\n    type: typeof DELETE_FIGURE,\r\n    payload: Id\r\n}\r\n\r\nexport const deleteFigureAction = (id: number): DeleteFigureAction => ({\r\n    type: DELETE_FIGURE,\r\n    payload: { id }\r\n});\r\n\r\n\r\n\r\nexport interface ShowFigureEditorAction extends Action {\r\n    type: typeof SHOW_FIGURE_EDITOR,\r\n    payload: Id\r\n}\r\n\r\nexport const showFigureEditorAction = (id: number): ShowFigureEditorAction => ({\r\n    type: SHOW_FIGURE_EDITOR,\r\n    payload: { id }\r\n})\r\n\r\n\r\n\r\ntype Hrefid = {\r\n    hrefid: string\r\n}\r\n\r\nexport interface ChangeActiveSVGFigureAction extends Action {\r\n    type: typeof CHANGE_ACTIVE_SVG_FIGURE\r\n    payload: Hrefid\r\n}\r\n\r\nexport const changeActiveSVGFigureAction = (hrefid: string): ChangeActiveSVGFigureAction => ({\r\n    type: CHANGE_ACTIVE_SVG_FIGURE,\r\n    payload: { hrefid }\r\n})\r\n\r\n\r\n\r\ntype ImportedFiguresList = {\r\n    importedFiguresList: Figure[]\r\n}\r\n\r\nexport interface ImportFiguresFromFileAction extends Action {\r\n    type: typeof IMPORT_FIGURES_FROM_FILE\r\n    payload: ImportedFiguresList\r\n}\r\n\r\nexport const importFiguresFromFileAction = (importedFiguresList: Figure[]): ImportFiguresFromFileAction => ({\r\n    type: IMPORT_FIGURES_FROM_FILE,\r\n    payload: { importedFiguresList }\r\n})\r\n\r\n\r\n\r\ntype FileContent = {\r\n    fileContent: string\r\n}\r\n\r\nexport interface HandleImportedProjectFileAction extends Action {\r\n    type: typeof HANDLE_IMPORTED_PROJECT_FILE,\r\n    payload: FileContent\r\n}\r\n\r\nexport const handleImportedProjectFileAction = (fileContent: FileContent): HandleImportedProjectFileAction => ({\r\n    type: HANDLE_IMPORTED_PROJECT_FILE,\r\n    payload: fileContent\r\n})\r\n\r\n\r\n\r\ntype Name = {\r\n    name: string\r\n}\r\nexport interface ChangeProjectNameAction extends Action {\r\n    type: typeof CHANGE_PROJECT_NAME,\r\n    payload: Name\r\n}\r\n\r\nexport const changeProjectNameAction = (name: Name): ChangeProjectNameAction => ({\r\n    type: CHANGE_PROJECT_NAME,\r\n    payload: name\r\n})\r\n\r\n\r\nexport type SVGFiguresListActions = AddFigureAction | DeleteFigureAction | ShowFigureEditorAction\r\n\r\nexport type SVGProjectsListActions = AddProjectAction | DeleteProjectAction | SetCurrentProjectAction\r\n\r\nexport type FiguresProjectsActionTypes =\r\n    AddProjectAction |\r\n    DeleteProjectAction |\r\n    SetCurrentProjectAction |\r\n    AddFigureAction |\r\n    DeleteFigureAction |\r\n    ShowFigureEditorAction |\r\n    ChangeActiveSVGFigureAction |\r\n    ImportFiguresFromFileAction |\r\n    HandleImportedProjectFileAction |\r\n    ChangeFigureValueAction |\r\n    ChangeProjectNameAction\r\n\r\n","export enum FigureTypes {\r\n  Circle = \"Circle\",\r\n  Polygon = \"Polygon\",\r\n  Square = \"Square\"\r\n};\r\n\r\nexport default FigureTypes;\r\n\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./SVGFiguresList.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport { addFigureAction, deleteFigureAction, showFigureEditorAction, SVGFiguresListActions } from \"../redux/reducers/figuresProjects/actions\";\r\nimport { Figure } from \"../static/Figure\";\r\nimport { InitialState } from \"../redux/initialState\";\r\nimport { Dispatch } from \"redux\";\r\n\r\ntype StateProps = {\r\n  figuresList: Figure[],\r\n  selectedFigure: Figure\r\n}\r\n\r\ntype DispatchProps = {\r\n  addFigure: () => void,\r\n  showFigureEditor: (id: number) => void,\r\n  deleteFigure: (id: number) => void\r\n}\r\n\r\ntype Props = StateProps & DispatchProps\r\n\r\nclass SVGFiguresList extends React.PureComponent<Props> {\r\n\r\n  isActiveListElement(elementId: number) {\r\n    var selectedElementId = this.props.selectedFigure ? this.props.selectedFigure.id : -1;\r\n    return selectedElementId === elementId ? 'active-list-element' : \"\";;\r\n  }\r\n\r\n  deleteFigureFromList(e: any, id: number) {\r\n    e.stopPropagation();\r\n    this.props.deleteFigure(id);\r\n  }\r\n\r\n  render() {\r\n    const { figuresList, addFigure, showFigureEditor } = this.props;\r\n    console.log(\"SVGFiguresList render\")\r\n    return (\r\n      <div className=\"svg-figures-list\">\r\n        <div className=\"bg-secondary text-white\" style={{ height: '7vh' }}>\r\n          <span className=\"figures-header text-left pl-2\">Figures</span>\r\n          <span className=\"mt-4 mr-4 float-right\" onClick={() => addFigure()}>\r\n            <FontAwesomeIcon className=\"add-figure\" icon={faPlus} size=\"2x\" />\r\n          </span>\r\n        </div>\r\n        <div className=\"figures-list overflow-auto\">\r\n          <ul id=\"figures-list\" className=\"list-group bg-light text-left\">\r\n            {figuresList && figuresList.map((item) => {\r\n              return (\r\n                <li\r\n                  key={item.id + item.name}\r\n                  className={'list-group-item list-figure ' + this.isActiveListElement(item.id)}\r\n                  onClick={() => showFigureEditor(item.id)}\r\n                >\r\n                  {item.name}\r\n                  <span onClick={(e: any) => this.deleteFigureFromList(e, item.id)}>\r\n                    <FontAwesomeIcon\r\n                      className=\"delete-figure\"\r\n                      icon={faTrash}\r\n                      size=\"1x\" />\r\n                  </span>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: InitialState): StateProps => {\r\n  const { figuresList, selectedFigure } = state.figuresProjects.present;\r\n  return { figuresList, selectedFigure };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<SVGFiguresListActions>): DispatchProps => {\r\n  return {\r\n    addFigure: () => dispatch(addFigureAction()),\r\n    deleteFigure: (id) => dispatch(deleteFigureAction(id)),\r\n    showFigureEditor: (id) => dispatch(showFigureEditorAction(id))\r\n  }\r\n}\r\nexport default connect<StateProps, DispatchProps, {}, InitialState>(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SVGFiguresList)\r\n\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { handleImportedProjectFileAction, HandleImportedProjectFileAction } from '../../redux/reducers/figuresProjects/actions';\r\nimport { Dispatch } from 'redux';\r\n\r\ntype State = {\r\n    fileContent: string,\r\n    fileName: string,\r\n    ifCorrectFile: boolean\r\n}\r\n\r\ntype OwnProps = {\r\n    buttonTitle: string,\r\n    fileType: string,\r\n    importIdentificator: string,\r\n    importModalHeader: string,\r\n    importFilePlaceholder: string\r\n}\r\n\r\ntype DispatchProps = {\r\n    handleImportedProjectFile: (fileContent: string) => void\r\n}\r\n\r\ntype Props = DispatchProps & OwnProps\r\nclass FileImport extends React.PureComponent<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            fileContent: \"\",\r\n            fileName: this.props.importFilePlaceholder,\r\n            ifCorrectFile: true\r\n        }\r\n\r\n    }\r\n\r\n    fileReader: FileReader = new FileReader();\r\n\r\n    handleChooseFile = (event: any) => {\r\n        if (event.target.files[0]) {\r\n            let file = event.target.files[event.target.files.length - 1];\r\n\r\n            if (!file.name.endsWith(this.props.fileType)) {\r\n                this.setState({ fileName: `Only ${this.props.fileType} files are allowed!`, ifCorrectFile: false });\r\n                return;\r\n            } else {\r\n                this.setState({ ifCorrectFile: true });\r\n            }\r\n\r\n            this.fileReader.readAsText(file, \"UTF-8\");\r\n            this.fileReader.onload = () => {\r\n                console.log(this.fileReader.result);\r\n                this.setState({ fileContent: this.fileReader.result as string });\r\n            }\r\n            this.setState({ fileName: file.name });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { importIdentificator, buttonTitle, importModalHeader } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"modal fade\" id={importIdentificator} tabIndex={-1} role=\"dialog\" aria-labelledby=\"importModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"importModalLabel\">{importModalHeader}</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <div className=\"input-group\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text\" id=\"inputGroupFileAddon01\">Upload</span>\r\n                                    </div>\r\n                                    <div className=\"custom-file\">\r\n                                        <input type=\"file\" className=\"custom-file-input\" id=\"inputGroupFile01\" aria-describedby=\"inputGroupFileAddon01\"\r\n                                            onChange={(evt) => this.handleChooseFile(evt)} onClick={(event: any) => { event.target.value = null }} />\r\n                                        <label className=\"custom-file-label\">{this.state.fileName}</label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                {this.state.ifCorrectFile\r\n                                    ? <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\" onClick={() => this.props.handleImportedProjectFile(this.state.fileContent)}>Import</button>\r\n                                    : <button type=\"button\" disabled className=\"btn btn-primary\" data-dismiss=\"modal\">Import</button>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <button type=\"button\" className=\"btn btn-secondary project-button  h-100\" data-toggle=\"modal\" data-target={`#${importIdentificator}`}><p> Import < br/> {buttonTitle} </p>  </button>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch<HandleImportedProjectFileAction>) => {\r\n    return {\r\n        handleImportedProjectFile: (fileContent: string) => dispatch(handleImportedProjectFileAction({ fileContent }))\r\n    }\r\n}\r\n\r\n\r\nexport default connect<{}, DispatchProps, OwnProps, {}>(\r\n    null,\r\n    mapDispatchToProps\r\n)(FileImport);","import React from 'react';\r\nimport \"./SVGProjectsList.css\"\r\nimport { connect } from \"react-redux\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport FileImport from './FileImport/FileImport';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport { Project } from '../static/Project';\r\nimport { InitialState } from '../redux/initialState';\r\nimport { Dispatch } from 'redux';\r\nimport { deleteProjectAction, addProjectAction, setCurrentProjectAction, SVGProjectsListActions } from '../redux/reducers/figuresProjects/actions';\r\n\r\n\r\ntype StateProps = {\r\n    selectedProject: Project,\r\n    projectList: Project[]\r\n}\r\n\r\ntype DispatchProps = {\r\n    addProject: () => void,\r\n    deleteProject: (id: string) => void,\r\n    setCurrentProject: (id: string) => void\r\n}\r\n\r\ntype Props = StateProps & DispatchProps\r\n\r\nclass SVGProjectsList extends React.PureComponent<Props> {\r\n\r\n    isActiveListElement(elementId: string) {\r\n        var selectedElementId = this.props.selectedProject !== null ? this.props.selectedProject.id : -1;\r\n        return selectedElementId === elementId ? 'active-list-element' : \"\";;\r\n    }\r\n\r\n    deleteProjectFromList(e: any, id: string) {\r\n        e.stopPropagation();\r\n        this.props.deleteProject(id);\r\n    }\r\n\r\n    downloadObjectAsJson = (exportObj: Project[] | Project, exportName: string) => {\r\n        var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(exportObj));\r\n        var downloadAnchorNode = document.createElement('a');\r\n        downloadAnchorNode.setAttribute(\"href\", dataStr);\r\n        downloadAnchorNode.setAttribute(\"download\", exportName + \".json\");\r\n        document.body.appendChild(downloadAnchorNode); // required for firefox\r\n        downloadAnchorNode.click();\r\n        downloadAnchorNode.remove();\r\n    }\r\n\r\n    exportProjects = () => {\r\n        this.downloadObjectAsJson(this.props.projectList, 'projects')\r\n    }\r\n\r\n    exportSelectedProject = () => {\r\n        this.downloadObjectAsJson(this.props.selectedProject, 'ProjectName');\r\n    }\r\n\r\n    render() {\r\n        console.log(\"SVGProjectsList render\");\r\n        const { projectList, addProject, setCurrentProject } = this.props;\r\n        return (\r\n            <div className=\"svg-project-list\">\r\n                <div className=\"bg-secondary text-white\" style={{ height: '7vh' }}>\r\n                    <span className=\"figures-header text-left pl-2\">Projects</span>\r\n                    <span className=\"mt-4 mr-4 float-right\" onClick={() => addProject()}>\r\n                        <FontAwesomeIcon className=\"add-figure\" icon={faPlus} size=\"2x\" />\r\n                    </span>\r\n                </div>\r\n                <div className=\"project-list overflow-auto border-bottom \">\r\n                    <ul id=\"figures-list\" className=\"list-group bg-light text-left\">\r\n                        {projectList && projectList.map((item) => {\r\n                            return (\r\n                                <li\r\n                                    key={item.id}\r\n                                    className={'list-group-item list-project ' + this.isActiveListElement(item.id)}\r\n                                    onClick={() => setCurrentProject(item.id)}>\r\n                                    {<p className=\"h3\">\r\n                                        {item.name}\r\n                                        <span onClick={(e) => this.deleteProjectFromList(e, item.id)} >\r\n                                            <FontAwesomeIcon\r\n                                                className=\"delete-project\"\r\n                                                icon={faTrash}\r\n                                                size=\"1x\" />\r\n                                        </span>\r\n                                    </p>}\r\n\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-lg-12 mb-1 project-export-button-group d-flex justify-content-between\">\r\n                    <FileImport\r\n                        buttonTitle={\"projects\"}\r\n                        fileType={\".json\"}\r\n                        importIdentificator={\"projectImport\"}\r\n                        importModalHeader={\"SVG Animation - import project\"}\r\n                        importFilePlaceholder={\"Choose projects json file...\"}\r\n\r\n                    />\r\n                    <button className=\"btn btn-secondary project-button h-100\" onClick={() => this.exportSelectedProject()}><p>Export <br /> Selected Project</p></button>\r\n                    <button className=\"btn btn-secondary project-button h-100\" onClick={() => this.exportProjects()}><p>Export <br /> Projects</p></button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state: InitialState): StateProps => {\r\n    const { selectedProject, projectList } = state.figuresProjects.present;\r\n    return { selectedProject, projectList };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<SVGProjectsListActions>) => {\r\n    return {\r\n        addProject: () => dispatch(addProjectAction()),\r\n        deleteProject: (id: string) => dispatch(deleteProjectAction({id})),\r\n        setCurrentProject: (id: string) => dispatch(setCurrentProjectAction({id}))\r\n    }\r\n}\r\n\r\nexport default connect<StateProps, DispatchProps, {}, InitialState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SVGProjectsList)\r\n","import React, { useRef, useCallback, FunctionComponent } from \"react\";\r\nimport \"./ActorName.css\"\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { changeFigureValueAction } from \"../../redux/reducers/figuresProjects/actions\";\r\nimport { InitialState, IData } from \"../../redux/initialState\";\r\n\r\ntype Props = {\r\n    valueType: string,\r\n}\r\n\r\nconst ActorName: FunctionComponent<Props> = (props) => {\r\n\r\n    const selectedFigure: IData = useSelector((state: InitialState) => state.figuresProjects.present.selectedFigure);\r\n    const dispatch = useDispatch();\r\n    const changeFigureValue = useCallback((type: string, value: string) => dispatch(changeFigureValueAction({ type, value })), [dispatch]);\r\n    const editName = useRef<HTMLButtonElement>(null);\r\n    const onBlurHandle = () => {\r\n        if (editName && editName.current) {\r\n            changeFigureValue(props.valueType, editName.current.innerHTML);\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className=\"text-center mt-3\">\r\n            <button ref={editName} className=\"h3 actor-project-name\"  suppressContentEditableWarning={true} contentEditable={true} onBlur={() => onBlurHandle()}>\r\n            {selectedFigure[props.valueType]}\r\n            </button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ActorName;","import React, { useCallback, FunctionComponent } from \"react\";\r\nimport { get } from 'lodash';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { changeFigureValueAction } from \"../../redux/reducers/figuresProjects/actions\";\r\nimport { InitialState } from \"../../redux/initialState\";\r\nimport { FigureTypes } from \"../../static/FigureTypes\";\r\nimport AxisTypes from \"../../static/AxisTypes\";\r\n\r\ntype Props = {\r\n  header: string,\r\n  valueType: string,\r\n  dropdownOptions: typeof AxisTypes | typeof FigureTypes\r\n}\r\n\r\nconst SelectDropdownValue: FunctionComponent<Props> = (props) => {\r\n  const initialValue = useSelector((state: InitialState) => get(state.figuresProjects.present.selectedFigure, props.valueType));\r\n  const dispatch = useDispatch();\r\n  const changeFigureValue = useCallback((type: string, value: string) => dispatch(changeFigureValueAction({ type, value })), [dispatch]);\r\n\r\n  const renderOptions = () => {\r\n    const options = props.dropdownOptions;\r\n    const optionsValues = Object.keys(options);\r\n    return Object.keys(options).map((item, key) => {\r\n      return (\r\n        <option key={key} value={optionsValues[key]}>\r\n          {item}\r\n        </option>\r\n      );\r\n    });\r\n  }\r\n\r\n  const onSelectChange = (event: any) => {\r\n    changeFigureValue(props.valueType, event.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className=\"form-group mt-4\">\r\n      <div className=\"ml-2 mt-2 text-dark font-weight-bold\"> {props.header}</div>\r\n      <select\r\n        value={initialValue}\r\n        className=\"form-control mt-2\"\r\n        onChange={e => onSelectChange(e)}>\r\n        {renderOptions()}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectDropdownValue;\r\n","import React, {useCallback, FunctionComponent} from \"react\";\r\nimport { get } from 'lodash';\r\nimport { useSelector,useDispatch } from 'react-redux'\r\nimport { changeFigureValueAction } from \"../../redux/reducers/figuresProjects/actions\";\r\nimport InputRange from \"react-input-range\";\r\nimport \"./InputNumberRange.css\";\r\nimport { InitialState } from \"../../redux/initialState\";\r\n\r\ntype Props = {\r\n  valueType: string,\r\n  header: string,\r\n  maxValue: number,\r\n  minValue: number,\r\n  step: number\r\n}\r\n\r\nconst InputNumberRange:FunctionComponent<Props> = (props) => {\r\n  const initialValue = useSelector( (state: InitialState) => get(state.figuresProjects.present.selectedFigure, props.valueType))\r\n  const dispatch = useDispatch();\r\n  const changeFigureValue = useCallback((type:string,value: number) => dispatch(changeFigureValueAction({type,value})),[dispatch]);\r\n  const [minValue, maxValue] = [props.minValue, props.maxValue];\r\n  \r\n  const changeTextInputValue = (e: any) => {\r\n    let { min, max } = e.target;\r\n    let value = Number(e.target.value);\r\n    value = Math.max(Number(min), Math.min(Number(max), Number(value)));\r\n    changeFigureValue(props.valueType, value);\r\n  }\r\n\r\n  return (\r\n    <div className=\"form-group\">\r\n      <div className=\"ml-2 mt-4 text-dark font-weight-bold\"> {props.header}</div>\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-9 mt-4 \">\r\n          <InputRange\r\n            minValue={minValue}\r\n            maxValue={maxValue}\r\n            value={initialValue}\r\n            step={props.step}\r\n            onChange={value => changeFigureValue(props.valueType, Number(value))}\r\n          />\r\n        </div>\r\n        <div className=\"col-lg-3 mt-3\">\r\n          <input\r\n            type=\"number\"\r\n            min={minValue}\r\n            max={maxValue}\r\n            step={props.step}\r\n            className=\"form-control\"\r\n            value={initialValue}\r\n            onChange={e => changeTextInputValue(e)}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputNumberRange;\r\n","enum AxisTypes  {\r\n    cy = \"Vertical\",\r\n    cx = \"Horizontal\"\r\n  };\r\n  \r\n  export default AxisTypes;\r\n  ","import React, { FunctionComponent, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { changeFigureValueAction } from \"../../redux/reducers/figuresProjects/actions\";\r\nimport { TwitterPicker } from 'react-color';\r\nimport { InitialState, IData } from \"../../redux/initialState\";\r\n\r\ntype Props = {\r\n    valueType: string,\r\n    header: string\r\n}\r\n\r\nconst ColorPicker: FunctionComponent<Props> = (props) => {\r\n    const selectedFigure: IData = useSelector((state: InitialState) => state.figuresProjects.present.selectedFigure)\r\n    const dispatch = useDispatch();\r\n    const initialColor = selectedFigure[props.valueType];\r\n\r\n    const changeFigureValue = useCallback((type, value) => dispatch(changeFigureValueAction({ type, value })), [dispatch]);\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <p className=\"h5 mt-3 mb-2 text-dark font-weight-bold\">{props.header}</p>\r\n            <TwitterPicker\r\n                color={initialColor}\r\n                onChange={color => changeFigureValue(props.valueType, color)}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default ColorPicker;","import React, { useCallback, useRef, FunctionComponent } from \"react\";\r\nimport \"./ActorName.css\"\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { changeProjectNameAction } from \"../../redux/reducers/figuresProjects/actions\";\r\nimport { InitialState } from \"../../redux/initialState\";\r\n\r\n\r\nconst ProjectName: FunctionComponent = () => {\r\n\r\n    const selectedProject = useSelector((state: InitialState) => state.figuresProjects.present.selectedProject);\r\n    const dispatch = useDispatch();\r\n    const editName = useRef<HTMLButtonElement>(null);\r\n    const changeProjectName = useCallback((name: string) => dispatch(changeProjectNameAction({ name })), [dispatch]);\r\n\r\n    const onBlurHandle = () => {\r\n        if (editName && editName.current) {\r\n            changeProjectName(editName.current.innerHTML);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"text-center mt-3\">\r\n            <button ref={editName} className=\"h1 actor-project-name\" suppressContentEditableWarning={true} contentEditable={true} onBlur={() => onBlurHandle()}>\r\n                {selectedProject[\"name\"]}\r\n            </button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ProjectName;","import React from \"react\";\r\nimport ActorName from \"../NameChange/ActorName\";\r\nimport SelectDropdownValue from \"../SelectDropdownValue/SelectDropdownValue\";\r\nimport InputNumberRange from '../InputNumberRange/InputNumberRange';\r\nimport FigureTypes from '../../static/FigureTypes';\r\nimport ColorPicker from \"../ColorPicker/ColorPicker\";\r\nimport ProjectName from \"../NameChange/ProjectName\";\r\nimport { connect } from \"react-redux\";\r\nimport { Figure } from \"../../static/Figure\";\r\nimport { InitialState } from \"../../redux/initialState\";\r\n\r\ntype StateProps = {\r\n  selectedFigure: Figure\r\n}\r\n\r\nclass SVGFigureEditor extends React.PureComponent<StateProps> {\r\n\r\n  render() {\r\n    console.log(\"SVGFigureEditor render\")\r\n    const { selectedFigure } = this.props;\r\n    console.log(selectedFigure,\"SVGFigureEditor selected figure\")\r\n    return (\r\n      <div className=\"figure-editor\">\r\n        {selectedFigure &&\r\n          <React.Fragment>\r\n            <ProjectName />\r\n            <ActorName\r\n              valueType=\"name\"\r\n            />\r\n            <SelectDropdownValue\r\n              header={\"Figure Type\"}\r\n              valueType=\"figureType\"\r\n              dropdownOptions={FigureTypes}\r\n            />\r\n            <InputNumberRange\r\n              header={\"Figure Size\"}\r\n              valueType=\"size\"\r\n              minValue={0}\r\n              maxValue={100}\r\n              step={1}\r\n            />\r\n            {selectedFigure.figureType === FigureTypes.Polygon &&\r\n              <InputNumberRange\r\n                header=\"Number of sides\"\r\n                valueType=\"numOfSides\"\r\n                minValue={3}\r\n                maxValue={15}\r\n                step={1}\r\n              />\r\n            }\r\n            <InputNumberRange\r\n              header=\"X Position\"\r\n              valueType=\"xPosition\"\r\n              minValue={0}\r\n              maxValue={500}\r\n              step={1}\r\n            />\r\n            <InputNumberRange\r\n              header=\"Y Position\"\r\n              valueType=\"yPosition\"\r\n              minValue={0}\r\n              maxValue={500}\r\n              step={1}\r\n            />\r\n            <p className=\"h3 mt-5 text-dark font-weight-bold\">Figure Style</p>\r\n            <InputNumberRange\r\n              header=\"Opacity\"\r\n              valueType=\"opacity\"\r\n              minValue={0}\r\n              maxValue={1}\r\n              step={0.01}\r\n            />\r\n            <ColorPicker\r\n              header=\"Fill\"\r\n              valueType=\"fill\"\r\n            />\r\n            <ColorPicker\r\n              header=\"Stroke\"\r\n              valueType=\"stroke\"\r\n            />\r\n            <InputNumberRange\r\n              header=\"Stroke Width:\"\r\n              valueType=\"strokeWidth\"\r\n              minValue={1}\r\n              maxValue={50}\r\n              step={1}\r\n            />\r\n          </React.Fragment>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: InitialState): StateProps => ({\r\n  selectedFigure: state.figuresProjects.present.selectedFigure\r\n});\r\n\r\nexport default connect<StateProps, {}, {}, InitialState>(\r\n  mapStateToProps,\r\n  {}\r\n)(SVGFigureEditor);\r\n\r\n\r\n","const SVGDimensions = Object.freeze({\r\n    width: 500,\r\n    height: 500\r\n})\r\nexport default SVGDimensions;","import React, { useCallback, FunctionComponent } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { changeFigureValueAction } from \"../../redux/reducers/figuresProjects/actions\";\r\nimport { get } from 'lodash';\r\nimport Switch from \"react-switch\";\r\nimport { InitialState } from \"../../redux/initialState\";\r\n\r\ntype Props = {\r\n    valueType: string,\r\n    header: string\r\n}\r\n\r\nconst AnimationSwitch: FunctionComponent<Props> = (props) => {\r\n    const checked: boolean = useSelector((state: InitialState) => get(state.figuresProjects.present.selectedFigure, props.valueType));\r\n    const dispatch = useDispatch();\r\n    const changeFigureValue = useCallback((type: string, value: boolean) => dispatch(changeFigureValueAction({ type, value })), [dispatch]);\r\n\r\n    const handleSwitchChange = (checked: boolean): void => {\r\n        changeFigureValue(props.valueType, checked);\r\n    }\r\n\r\n    return (\r\n        <div className=\"mt-4\">\r\n            <span className=\"mr-2 mt-3\" >{props.header}</span>\r\n            <Switch className=\"ml-2 mt-2\" onChange={handleSwitchChange} checked={checked} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AnimationSwitch;","import React from \"react\";\r\nimport SelectDropdownValue from \"../SelectDropdownValue/SelectDropdownValue\";\r\nimport InputNumberRange from '../InputNumberRange/InputNumberRange';\r\nimport AxisTypes from '../../static/AxisTypes';\r\nimport SVGDimensions from \"../../static/SVGDimensions\";\r\nimport AnimationSwitch from \"../AnimationSwitch/AnimationSwitch\";\r\nimport { connect } from \"react-redux\";\r\nimport { InitialState } from \"../../redux/initialState\";\r\n\r\ntype StateProps = {\r\n    ifAnimationEnabled: boolean,\r\n}\r\n\r\nclass SVGAnimationEditor extends React.PureComponent<StateProps> {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"animation-editor\">\r\n                <AnimationSwitch\r\n                    header=\"Animation Enabled\"\r\n                    valueType=\"animationEnabled\"\r\n                />\r\n                {this.props.ifAnimationEnabled &&\r\n                    <React.Fragment>\r\n                        <SelectDropdownValue\r\n                            header=\"Animation Axis\"\r\n                            valueType=\"animation.attributeName\"\r\n                            dropdownOptions={AxisTypes}\r\n                        />\r\n                        <InputNumberRange\r\n                            header=\"Animation Starting point\"\r\n                            valueType=\"animation.from\"\r\n                            minValue={0}\r\n                            maxValue={SVGDimensions.width}\r\n                            step={1}\r\n                        />\r\n                        <InputNumberRange\r\n                            header=\"Animation ending point\"\r\n                            valueType=\"animation.to\"\r\n                            minValue={0}\r\n                            maxValue={SVGDimensions.width}\r\n                            step={1}\r\n                        />\r\n                        <InputNumberRange\r\n                            header=\"Animation duration\"\r\n                            valueType=\"animation.dur\"\r\n                            minValue={0}\r\n                            maxValue={20}\r\n                            step={0.1}\r\n                        />\r\n                        <InputNumberRange\r\n                            header=\"Circle rotation diameter\"\r\n                            valueType=\"animation.r\"\r\n                            minValue={0}\r\n                            maxValue={200}\r\n                            step={1}\r\n                        />\r\n                    </React.Fragment>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: InitialState): StateProps => ({\r\n    ifAnimationEnabled: state.figuresProjects.present.selectedFigure.animationEnabled\r\n});\r\n\r\nexport default connect<StateProps,{},{},InitialState>(\r\n    mapStateToProps,\r\n    {}\r\n)(SVGAnimationEditor);","import React from 'react';\r\nimport ReactDOMServer from 'react-dom/server';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport './SVGExport.css';\r\nimport { InitialState } from '../../redux/initialState';\r\n\r\ntype StateProps = {\r\n\r\n}\r\ntype OwnProps = {\r\n    title: string\r\n    svgText: JSX.Element\r\n}\r\n\r\ntype Props = StateProps & OwnProps\r\n\r\nclass SVGExport extends React.PureComponent<Props> {\r\n\r\n    private textArea = React.createRef<HTMLTextAreaElement>();\r\n\r\n    private copySVGAnimation() {\r\n        const { svgText } = this.props;\r\n        return svgText && ReactDOMServer.renderToStaticMarkup(svgText);\r\n    }\r\n\r\n    private handleTextSelect() {\r\n        if (this.textArea && this.textArea.current) {\r\n            this.textArea.current.select();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <button type=\"button\" className=\"btn btn-secondary float-right mr-2 mt-2\" data-toggle=\"modal\" data-target=\"#exportModal\"> Export SVG </button>\r\n                <div className=\"modal fade\" id=\"exportModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"exportModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exportModalLabel\">SVGAnimation - Export SVG</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <textarea value={this.copySVGAnimation()} readOnly ref={this.textArea} className=\"svg-text rounded bg-light w-100 mt-2\" onClick={() => this.handleTextSelect()} />\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\">Done</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: InitialState): StateProps => {\r\n    const { figuresList } = state.figuresProjects.present;\r\n    return { figuresList };\r\n}\r\n\r\nexport default connect<StateProps,{},{},InitialState>(\r\n    mapStateToProps,\r\n    {}\r\n)(SVGExport)","export class Animation {\r\n  href: string;\r\n  attributeName: string;\r\n  from: number;\r\n  to: number;\r\n  additive: string;\r\n  repeatCount: string;\r\n  calcMode: string;\r\n  keyTimes: string;\r\n  keySplines: string;\r\n  dur: number;\r\n  begin: string;\r\n  fill: string;\r\n  r: number;\r\n\r\n  constructor(id: string) {\r\n    this.href = \"#\" + id;\r\n    this.attributeName = \"cy\";\r\n    this.from = 0;\r\n    this.to = 100;\r\n    this.additive = \"sum\";\r\n    this.repeatCount = \"indefinite\";\r\n    this.calcMode = \"spline\";\r\n    this.keyTimes = \"0;1\";\r\n    this.keySplines = \".42 0.5 0.5 1\";\r\n    this.dur = 5;\r\n    this.begin = \"0s\";\r\n    this.fill = \"remove\";\r\n    this.r = 0;\r\n  }\r\n}\r\n\r\nexport default Animation;","import Animation from './Animation';\r\nimport { MetadataObj } from '../redux/reducers/utils';\r\n\r\n\r\nexport class Figure implements MetadataObj {\r\n    static staticId: number = 1;\r\n    _id: number;\r\n    hrefid: string;\r\n    name: string;\r\n    figureType: string;\r\n    animationType: string;\r\n    xPosition: number;\r\n    yPosition: number;\r\n    numOfSides: number;\r\n    opacity: number;\r\n    strokeWidth: number;\r\n    fill: any;\r\n    stroke: any;\r\n    size: number;\r\n    animationEnabled: boolean;\r\n    animation: Animation = new Animation(this.hrefid);\r\n\r\n    constructor() {\r\n        this._id = Figure.staticId;\r\n        this.hrefid = 'figure' + this.id;\r\n        this.name = 'Figure ' + this.id;\r\n        this.figureType = 'Circle'\r\n        this.animationType = 'Move down'\r\n        this.xPosition = 50;\r\n        this.yPosition = 100;\r\n        this.numOfSides = 3;\r\n        this.opacity = 1;\r\n        this.strokeWidth = 1;\r\n        this.fill = {};\r\n        this.stroke = {};\r\n        this.size = 50;\r\n        this.animationEnabled = true;\r\n        this.animation = new Animation(this.hrefid);\r\n        Figure.staticId++;\r\n    }\r\n    set id(newid: number) {\r\n        this._id = newid;\r\n        this.hrefid = 'figure' + newid;\r\n        if (this.name !== undefined) this.name = 'Figure ' + newid;\r\n        if (this.animation !== undefined) this.animation.href = '#' + this.hrefid;\r\n    }\r\n\r\n    get id(): number { return this._id }\r\n}","import React from 'react';\r\nimport XMLParser from 'react-xml-parser';\r\nimport FigureTypes from '../../static/FigureTypes';\r\nimport { Figure } from '../../static/Figure';\r\nimport { importFiguresFromFileAction, ImportFiguresFromFileAction } from '../../redux/reducers/figuresProjects/actions';\r\nimport { connect } from \"react-redux\";\r\nimport { IData } from '../../redux/initialState';\r\nimport { Dispatch } from 'redux';\r\n\r\n\r\ntype StateProps = {\r\n\r\n}\r\ntype DispatchProps = {\r\n    importFiguresFromFile: (figures: Figure[]) => void\r\n}\r\n\r\ntype State = {\r\n    fileName: string,\r\n    fileContent: string | ArrayBuffer | null,\r\n    svgNotSupported: boolean,\r\n    alertInformation: string\r\n}\r\n\r\ntype Props = StateProps & DispatchProps;\r\n\r\nclass SVGImport extends React.PureComponent<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            fileName: \"Choose svg file...\",\r\n            fileContent: \"\",\r\n            svgNotSupported: false,\r\n            alertInformation: \"\"\r\n        };\r\n    }\r\n\r\n    handleChooseFile(evt: any) {\r\n        if (evt.target.files[0] === undefined) return;\r\n\r\n        let file: File = evt.target.files[evt.target.files.length - 1];\r\n        let reader = new FileReader();\r\n        reader.onload = () => {\r\n            let content = reader.result;\r\n            this.setState({ fileContent: content });\r\n        }\r\n        reader.readAsText(file, \"UTF-8\");\r\n        this.setState({ fileName: file.name });\r\n    }\r\n\r\n    handleImportFile() {\r\n        let svgJSON: any = new XMLParser().parseFromString(this.state.fileContent);\r\n        let figures: Figure[] = [];\r\n        console.log(svgJSON, 'svgJson');\r\n\r\n        for (let i in svgJSON.children) {\r\n            let svgObject = svgJSON.children[i];\r\n            if (this.isFigure(svgObject)) {\r\n                figures.push(this.createFigureFromSVG(svgObject));\r\n            } else if (svgObject.name.toUpperCase() === \"ANIMATE\") {\r\n                this.addAnimationToFigure(svgObject, figures);\r\n            } else {\r\n                let information = \"Not supported svg element: \" + svgObject.name + \". \";\r\n                this.setState({ fileName: \"Choose svg file...\", svgNotSupported: true, alertInformation: information });\r\n                return;\r\n            }\r\n            this.props.importFiguresFromFile(figures);\r\n        }\r\n        this.setState({ svgNotSupported: false, fileName: \"Choose svg file...\", alertInformation: \"SVG uploaded successfully.\" });\r\n    }\r\n\r\n    isFigure(svgObject: any) {\r\n        for (let i in FigureTypes) {\r\n            if (FigureTypes[i].toUpperCase() === svgObject.name.toUpperCase()) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    createFigureFromSVG(svgObject: any) {\r\n        let figure: IData & Figure = new Figure();\r\n        for (let svgProperty in svgObject.attributes) {\r\n            let atr = svgObject.attributes[svgProperty];\r\n\r\n            if (svgProperty === 'fill')\r\n                figure.fill.hex = atr;\r\n            else if (svgProperty === 'xposition')\r\n                figure.xPosition = parseInt(atr);\r\n            else if (svgProperty === 'yposition')\r\n                figure.yPosition = parseInt(atr);\r\n            else if (svgProperty === 'numofsides')\r\n                figure.numOfSides = parseInt(atr);\r\n            else if (svgProperty === 'figuretype')\r\n                figure.figureType = atr;\r\n            else if (svgProperty === 'opacity')\r\n                figure.opacity = parseFloat(atr);\r\n            else if (svgProperty === 'stroke-width')\r\n                figure.strokeWidth = parseFloat(atr);\r\n            else if (svgProperty === 'size')\r\n                figure.size = parseInt(atr);\r\n            else if (svgProperty === 'stroke')\r\n                figure.stroke.hex = atr;\r\n            else figure[svgProperty] = atr;\r\n        }\r\n        return figure;\r\n    }\r\n\r\n    addAnimationToFigure(svgObject: any, figures: Figure[] & IData) {\r\n        for (let i in figures) {\r\n            if (('#' + figures[i].hrefid) === svgObject.attributes.href) {\r\n                Object.keys(svgObject.attributes).forEach(function (key, index) {\r\n                    if (key === '_attributename')\r\n                        figures[i].animation.attributeName = svgObject.attributes[key];\r\n                    else if (key === '_to')\r\n                        figures[i].animation.to = svgObject.attributes[key]\r\n                    else if (key === 'from')\r\n                        figures[i].animation.from = svgObject.attributes[key]\r\n                    else figures[i].animation[key] = svgObject.attributes[key];\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <button type=\"button\" className=\"btn btn-secondary float-right mr-2 mt-2  \" data-toggle=\"modal\" data-target=\"#importModal\"> Import SVG </button>\r\n                <div className=\"modal fade\" id=\"importModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"importModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"importModalLabel\">SVGAnimation - Import SVG</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <div className=\"input-group\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text\" id=\"inputGroupFileAddon01\">Upload</span>\r\n                                    </div>\r\n                                    <div className=\"custom-file\">\r\n                                        <input type=\"file\" className=\"custom-file-input\" id=\"inputGroupFile01\" aria-describedby=\"inputGroupFileAddon01\"\r\n                                            onChange={(evt) => this.handleChooseFile(evt)} onClick={(event: any) => { event.target.value = null }} />\r\n                                        <label className=\"custom-file-label\">{this.state.fileName}</label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\" onClick={() => this.handleImportFile()}>Import</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<ImportFiguresFromFileAction>) => {\r\n    return {\r\n        importFiguresFromFile: (importedFiguresList: Figure[]) => dispatch(importFiguresFromFileAction(importedFiguresList))\r\n    }\r\n}\r\nexport default connect<{},DispatchProps,{},{}>(\r\n    null,\r\n    mapDispatchToProps\r\n)(SVGImport)","import React from 'react';\r\n\r\nfunction SVGAnimate(props) {\r\n    const animation = props.animation;\r\n    return (\r\n        <animate\r\n            href={animation.href}\r\n            attributeName={props.attributeName === undefined ? animation.attributeName : props.attributeName}\r\n            from={props.from === undefined ? animation.from : props.from}\r\n            to={props.to === undefined ? animation.to : props.to}\r\n            additive={animation.additive}\r\n            repeatCount={animation.repeatCount}\r\n            calcMode={animation.calcMode}\r\n            keyTimes={animation.keyTimes}\r\n            keySplines={animation.keySplines}\r\n            dur={`${animation.dur}s`}\r\n            begin={animation.begin}\r\n            fill={animation.fill} \r\n            _to = {animation.to}\r\n            _from = {animation.from}\r\n            _attributename = {animation.attributeName}/>\r\n    )\r\n}\r\n\r\nexport default SVGAnimate;","import React from 'react';\r\n\r\nfunction SVGAnimationMotion(props) {\r\n    const animation = props.animation;\r\n    const r = animation.r;\r\n    const rr = 2 * r;\r\n    const path = \"M 0,0 m -\" + r + \", 0 a \" + r + \",\" + r + \" 0 1,0 \" + rr + \",0 a \" + r + \",\" + r + \" 0 1,0 -\" + rr + \",0\";\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {animation.r !== 0 &&\r\n                <animateMotion\r\n                    dur={`${animation.dur}s`}\r\n                    begin={animation.begin}\r\n                    fill={animation.fill}\r\n                    repeatCount={animation.repeatCount}\r\n                    path={path} />\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default SVGAnimationMotion;","import React from 'react';\r\nimport SVGAnimate from '../SVGAnimation/SVGAnimate'\r\nimport SVGAnimationMotion from '../SVGAnimation/SVGAnimationMotion';\r\n\r\nfunction SVGCircle(props) {\r\n    const figure = props.figure;\r\n    const animationEnabled = figure.animationEnabled;\r\n    return (\r\n        <React.Fragment>\r\n            <circle style={{ cursor: 'pointer' }}\r\n                id={figure.hrefid}\r\n                opacity={figure.opacity}\r\n                fill={figure.fill.hex}\r\n                stroke={figure.stroke.hex}\r\n                strokeWidth={figure.strokeWidth}\r\n                cx={figure.xPosition}\r\n                cy={figure.yPosition}\r\n                r={figure.size}\r\n                href={figure.href}\r\n                figuretype={figure.figureType}\r\n                name={figure.name}\r\n                xposition={figure.xPosition}\r\n                yposition={figure.yPosition}\r\n                size={figure.size}\r\n            >\r\n                {animationEnabled && <SVGAnimationMotion animation={figure.animation} />}\r\n            </circle>\r\n            {animationEnabled && <SVGAnimate animation={figure.animation} />}\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default SVGCircle;","import React from 'react';\r\nimport SVGAnimate from '../SVGAnimation/SVGAnimate'\r\nimport SVGAnimationMotion from '../SVGAnimation/SVGAnimationMotion';\r\n\r\nfunction SVGSquare(props) {\r\n    const figure = props.figure;\r\n    const animationEnabled = figure.animationEnabled;\r\n    return (\r\n        <React.Fragment>\r\n            <polygon style={{ cursor: 'pointer' }}\r\n                id={figure.hrefid}\r\n                opacity={figure.opacity}\r\n                fill={figure.fill.hex}\r\n                stroke={figure.stroke.hex}\r\n                strokeWidth={figure.strokeWidth}\r\n                hrefid={figure.hrefid}\r\n                name={figure.name}\r\n                figuretype={figure.figureType}\r\n                xposition={figure.xPosition}\r\n                yposition={figure.yPosition}\r\n                numofsides={figure.numOfSides}\r\n                size={figure.size}\r\n            >\r\n                {animationEnabled && <SVGAnimationMotion animation={figure.animation} />}\r\n            </polygon>\r\n            {animationEnabled && <SVGAnimate animation={figure.animation}\r\n                attributeName=\"points\"\r\n                from={computeCornerPoints(figure.xPosition, figure.yPosition, figure.size)}\r\n                to={computeToPoints(figure)}\r\n            />}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nfunction computeToPoints(figure) {\r\n    if (figure.animation.attributeName === 'cx')\r\n        return computeCornerPoints(figure.xPosition + parseInt(figure.animation.to), figure.yPosition, figure.size, figure.numOfSides);\r\n    if (figure.animation.attributeName === 'cy')\r\n        return computeCornerPoints(figure.xPosition, figure.yPosition + parseInt(figure.animation.to), figure.size, figure.numOfSides);\r\n}\r\n\r\nfunction computeCornerPoints(xMiddle, yMiddle, sideLength) {\r\n    let squarePoints = [];\r\n    squarePoints.push(parseInt(xMiddle - sideLength / 2), parseInt(yMiddle - sideLength / 2));\r\n    squarePoints.push(parseInt(xMiddle - sideLength / 2), parseInt(yMiddle + sideLength / 2));\r\n    squarePoints.push(parseInt(xMiddle + sideLength / 2), parseInt(yMiddle + sideLength / 2));\r\n    squarePoints.push(parseInt(xMiddle + sideLength / 2), parseInt(yMiddle - sideLength / 2));\r\n    return squarePoints;\r\n}\r\n\r\nexport default SVGSquare;","import React from 'react';\r\nimport SVGAnimate from '../SVGAnimation/SVGAnimate'\r\nimport SVGAnimationMotion from '../SVGAnimation/SVGAnimationMotion';\r\n\r\nfunction SVGPolygon(props) {\r\n    const figure = props.figure;\r\n    const animationEnabled = figure.animationEnabled;\r\n    return (\r\n        <React.Fragment>\r\n            <polygon style={{ cursor: 'pointer' }}\r\n                id={figure.hrefid}\r\n                opacity={figure.opacity}\r\n                fill={figure.fill.hex}\r\n                stroke={figure.stroke.hex}\r\n                strokeWidth={figure.strokeWidth}\r\n                hrefid={figure.hrefid}\r\n                name={figure.name}\r\n                figuretype={figure.figureType}\r\n                xposition={figure.xPosition}\r\n                yposition={figure.yPosition}\r\n                numofsides={figure.numOfSides}\r\n                size={figure.size}\r\n            >\r\n                {animationEnabled && <SVGAnimationMotion animation={figure.animation} />}\r\n            </polygon>\r\n            {animationEnabled &&\r\n                <SVGAnimate animation={figure.animation}\r\n                    attributeName=\"points\"\r\n                    from={computeCornerPoints(figure.xPosition, figure.yPosition, figure.size, figure.numOfSides)}\r\n                    to={computeToPoints(figure)}\r\n                />}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nfunction computeToPoints(figure) {\r\n    if (figure.animation.attributeName === 'cx')\r\n        return computeCornerPoints(figure.xPosition + parseInt(figure.animation.to), figure.yPosition, figure.size, figure.numOfSides);\r\n    if (figure.animation.attributeName === 'cy')\r\n        return computeCornerPoints(figure.xPosition, figure.yPosition + parseInt(figure.animation.to), figure.size, figure.numOfSides);\r\n}\r\n\r\nfunction computeCornerPoints(xMiddle, yMiddle, radius, numOfSides) {\r\n    let polygonPoints = [];\r\n    for (let i = 0; i < numOfSides; i++) {\r\n        polygonPoints.push(parseInt(xMiddle + radius * Math.cos(2 * Math.PI * i / numOfSides)),\r\n            parseInt(yMiddle + radius * Math.sin(2 * Math.PI * i / numOfSides)));\r\n    }\r\n    return polygonPoints;\r\n}\r\n\r\nexport default SVGPolygon;","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUndo, faRedo } from '@fortawesome/free-solid-svg-icons'\r\nimport styled from \"styled-components\"\r\nimport { ActionCreators as UndoActionCreators } from 'redux-undo'\r\nimport { InitialState } from '../../redux/initialState';\r\n\r\n\r\ntype IconProps = {\r\n    canClick: boolean\r\n}\r\nconst Icon = styled.div`\r\n    cursor: ${(props: IconProps) => props.canClick ? \"pointer\" : \"no-drop\"};\r\n    margin: 10px;\r\n    display: inline-block\r\n`;\r\n\r\ntype StateProps = {\r\n    canUndo: boolean,\r\n    canRedo: boolean\r\n}\r\n\r\ntype DispatchProps = {\r\n    onUndo: () => void,\r\n    onRedo: () => void\r\n}\r\ntype Props = DispatchProps & StateProps\r\n\r\nclass UndoRedo extends React.PureComponent<Props> {\r\n\r\n    handleKeyPress = (event: any) => {\r\n        const { canUndo, canRedo, onUndo, onRedo } = this.props;\r\n        if (canUndo && event.ctrlKey && event.key === 'z') {\r\n            onUndo();\r\n        } else if (canRedo && event.ctrlKey && event.shiftKey && event.key === 'z') {\r\n            onRedo();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('keydown', this.handleKeyPress)\r\n    }\r\n\r\n    render() {\r\n        const { canUndo, canRedo, onUndo, onRedo } = this.props;\r\n        return (\r\n            <div>\r\n                <Icon canClick={canUndo} onClick={() => canUndo ? onUndo() : null}>\r\n                    <FontAwesomeIcon icon={faUndo} size=\"2x\" />\r\n                </Icon>\r\n                <Icon canClick={canRedo} onClick={() => canRedo ? onRedo() : null}>\r\n                    <FontAwesomeIcon icon={faRedo} size=\"2x\" />\r\n                </Icon>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: InitialState): StateProps => {\r\n    return {\r\n        canUndo: state.figuresProjects.past.length > 0,\r\n        canRedo: state.figuresProjects.future.length > 0,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        onUndo: () => dispatch(UndoActionCreators.undo()),\r\n        onRedo: () => dispatch(UndoActionCreators.redo())\r\n    }\r\n}\r\n\r\nexport default connect<StateProps, DispatchProps, {}, InitialState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(UndoRedo)\r\n","import React from 'react';\r\nimport SVGExport from \"./SVGExport/SVGExport\";\r\nimport SVGImport from \"./SVGImport/SVGImport\";\r\nimport SVGCircle from \"./SVGFigures/SVGCircle\";\r\nimport SVGSquare from \"./SVGFigures/SVGSquare\";\r\nimport SVGPolygon from \"./SVGFigures/SVGPolygon\";\r\nimport SVGDimensions from \"../static/SVGDimensions\";\r\nimport { changeActiveSVGFigureAction, ChangeActiveSVGFigureAction } from \"../redux/reducers/figuresProjects/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport UndoRedo from './UndoRedo/UndoRedo';\r\nimport { Figure } from '../static/Figure';\r\nimport { InitialState } from '../redux/initialState';\r\nimport { Dispatch } from 'redux';\r\n\r\n\r\ntype StateProps = {\r\n    figuresList: Figure[]\r\n}\r\n\r\ntype DispatchProps = {\r\n    changeActiveSVGFigure: (hrefid: string) => void\r\n}\r\n\r\ntype Props = DispatchProps & StateProps\r\n\r\nclass SVGCanvas extends React.PureComponent<Props> {\r\n\r\n    private svgText = React.createRef<SVGSVGElement>();\r\n\r\n    setFigure(evt: any) {\r\n        if (evt.target.getAttribute(\"figuretype\") !== null) {\r\n            this.props.changeActiveSVGFigure(evt.target.id);\r\n        }\r\n    }\r\n\r\n    getFiguresToRender() {\r\n        const { figuresList } = this.props;\r\n        return figuresList && figuresList.map((figure, i) => {\r\n            switch (figure.figureType) {\r\n                case \"Circle\": {\r\n                    return <SVGCircle key={i} figure={figure} />\r\n                }\r\n                case \"Square\": {\r\n                    return <SVGSquare key={i} figure={figure} />\r\n                }\r\n                case \"Polygon\": {\r\n                    return <SVGPolygon key={i} figure={figure} />\r\n                }\r\n                default: {\r\n                    return <SVGCircle key={i} figure={figure} />\r\n                }\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    renderSVG() {\r\n        return (\r\n            <svg version=\"1.1\" ref={this.svgText} className=\"border-top border-bottom\" xmlns=\"http://www.w3.org/2000/svg\" viewBox={`0 0 ${SVGDimensions.width} ${SVGDimensions.height}`}\r\n                width=\"100%\"\r\n                height=\"79vh\"\r\n                onClick={(evt) => this.setFigure(evt)}>\r\n                {this.getFiguresToRender()}\r\n            </svg>\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"row w-100  d-flex align-content-center\" style={{ height: '10vh' }}>\r\n                    <div className=\"col-lg-12 mt-5 text-center h-100\">\r\n                        <span className=\"h2\">SVGAnimation</span>\r\n                        <SVGExport title={\"SVGAnimation\"} svgText={this.renderSVG()} />\r\n                        <SVGImport />\r\n                    </div>\r\n                </div>\r\n                {this.renderSVG()}\r\n                <UndoRedo />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: InitialState): StateProps => ({\r\n    figuresList: state.figuresProjects.present.figuresList\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<ChangeActiveSVGFigureAction>) => {\r\n    return {\r\n        changeActiveSVGFigure: (hrefid: string) => dispatch(changeActiveSVGFigureAction(hrefid))\r\n    }\r\n}\r\n\r\nexport default connect<StateProps, DispatchProps, {}, InitialState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SVGCanvas)","import React from 'react'\r\nimport \"./SVGEditorNav.css\"\r\nimport { connect } from \"react-redux\";\r\nimport { InitialState } from '../redux/initialState';\r\nimport { Dispatch } from 'redux';\r\nimport { HandleEditorTabChangeAction, handleEditorTabChangeAction } from '../redux/reducers/selectedList/actions';\r\n\r\n\r\ntype StateProps = {\r\n    ifAnimationEditionMode: boolean\r\n}\r\n\r\ntype DispatchProps = {\r\n    handleEditorTabChange: (flag: boolean) => void\r\n}\r\n\r\ntype Props = StateProps & DispatchProps\r\n\r\nclass SVGEditorNav extends React.PureComponent<Props, {}> {\r\n\r\n    isActiveEditor = (value: boolean): string => {\r\n        return value === this.props.ifAnimationEditionMode ? \"active\" : \"\";\r\n    }\r\n\r\n    render() {\r\n        const { handleEditorTabChange } = this.props;\r\n        return (\r\n            <ul className=\"svg-editor-nav nav nav-tabs nav-fill \">\r\n                <li className=\"svg-editor-nav-item nav-item \" onClick={() => handleEditorTabChange(false)}>\r\n                    <button className={\" border-left-0 nav-link btn btn-link .btn-outline-* w-100  \" + this.isActiveEditor(false)}>Properties</button>\r\n                </li>\r\n                <li className=\"svg-editor-nav-item nav-item\" onClick={() => handleEditorTabChange(true)}>\r\n                    <button className={\" border-right-0 nav-link btn btn-link .btn-outline-* w-100  \" + this.isActiveEditor(true)}>Animations</button>\r\n                </li>\r\n            </ul>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state: InitialState): StateProps => ({\r\n    ifAnimationEditionMode: state.selectedList.ifAnimationEditionMode\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<HandleEditorTabChangeAction>) => {\r\n    return {\r\n        handleEditorTabChange: (flag: boolean) => dispatch(handleEditorTabChangeAction({flag})),\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SVGEditorNav)\r\n","import { Action } from \"redux\";\r\nimport { HANDLE_EDITOR_TAB_CHANGE, CHANGE_PROJECT_FIGURE_TAB } from \"./actionTypes\";\r\n\r\n\r\ntype Flag = {\r\n    flag: boolean\r\n}\r\n\r\nexport interface HandleEditorTabChangeAction extends Action {\r\n    type: typeof HANDLE_EDITOR_TAB_CHANGE\r\n    payload: Flag\r\n}\r\n\r\nexport interface ChangeProjectFigureTabAction extends Action {\r\n    type: typeof CHANGE_PROJECT_FIGURE_TAB\r\n    payload: Flag\r\n}\r\n\r\nexport const handleEditorTabChangeAction = (flag: Flag): HandleEditorTabChangeAction => ({\r\n    type: HANDLE_EDITOR_TAB_CHANGE,\r\n    payload: flag\r\n});\r\n\r\nexport const changeProjectFigureTabAction = (flag: Flag): ChangeProjectFigureTabAction => ({\r\n    type: CHANGE_PROJECT_FIGURE_TAB,\r\n    payload: flag\r\n});\r\n\r\nexport type SelectedListActionTypes = ChangeProjectFigureTabAction | HandleEditorTabChangeAction\r\n\r\n","export const CHANGE_PROJECT_FIGURE_TAB: string = \"CHANGE_PROJECT_FIGURE_TAB\";\r\nexport const HANDLE_EDITOR_TAB_CHANGE: string = \"HANDLE_EDITOR_TAB_CHANGE\";\r\n\r\n","import React from 'react';\r\nimport { Dispatch } from 'redux';\r\nimport { connect } from \"react-redux\";\r\nimport \"./SVGProjectsFiguresNav.css\";\r\nimport { Project } from '../static/Project';\r\nimport { InitialState } from '../redux/initialState';\r\nimport { ChangeProjectFigureTabAction, changeProjectFigureTabAction } from '../redux/reducers/selectedList/actions';\r\n\r\ntype StateProps = {\r\n    selectedProject: Project,\r\n    ifProjectCreationMode?: boolean,\r\n}\r\n\r\ntype DispatchProps = {\r\n    handleProjectFigureTabChange: (flag: boolean) => void\r\n}\r\n\r\ntype Props = StateProps & DispatchProps\r\n\r\nclass SVGProjectsFiguresNav extends React.PureComponent<Props, {}> {\r\n\r\n    private isActiveProjectFigureTab(value: boolean): string {\r\n        return value === this.props.ifProjectCreationMode ? \" active\" : \"\";\r\n    }\r\n\r\n    render() {\r\n        const { selectedProject, handleProjectFigureTabChange } = this.props;\r\n        return (\r\n            <ul className=\"svg-editor-nav nav nav-tabs nav-fill\" style={{ height: '3vh' }}>\r\n                <li className=\"nav-item bg-light\" onClick={() => handleProjectFigureTabChange(true)}>\r\n                    <button className={\"project-figure-nav-item btn btn-outline-secondary  h-100 w-100 \" + this.isActiveProjectFigureTab(true)}>Projects</button>\r\n                </li>\r\n                {selectedProject != null\r\n                    ? <li className=\"nav-item bg-light \" onClick={() => handleProjectFigureTabChange(false)}>\r\n                        <button className={\"project-figure-nav-item btn btn-outline-secondary .btn-outline-*  h-100 w-100\" + this.isActiveProjectFigureTab(false)}>Figures</button>\r\n                    </li>\r\n                    : <li className=\"nav-item  bg-light\" >\r\n                        <button className=\"btn btn-outline-secondary .btn-outline-* h-100 w-100\" disabled>Figures</button>\r\n                    </li>\r\n                }\r\n            </ul>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state: InitialState): StateProps => ({\r\n        selectedProject: state.figuresProjects.present.selectedProject,\r\n        ifProjectCreationMode: state.selectedList.ifProjectCreationMode\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<ChangeProjectFigureTabAction>): DispatchProps => {\r\n    return {\r\n        handleProjectFigureTabChange: (flag: boolean) => dispatch(changeProjectFigureTabAction({flag}))\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SVGProjectsFiguresNav)\r\n","import React from \"react\";\r\nimport \"./SVGAnimation.css\";\r\nimport { connect } from \"react-redux\";\r\nimport SVGFiguresList from \"./SVGFiguresList/SVGFiguresList\";\r\nimport SVGProjectsList from \"./SVGProjectsList/SVGProjectsList\";\r\nimport SVGFigureEditor from \"./SVGEditors/SVGFigureEditor/SVGFigureEditor\";\r\nimport SVGAnimationEditor from \"./SVGEditors/SVGAnimationEditor/SVGAnimationEditor\";\r\nimport SVGCanvas from \"./SVGCanvas/SVGCanvas\";\r\nimport SVGEditorNav from \"./SVGEditorNav/SVGEditorNav\";\r\nimport SVGProjectsFiguresNav from \"./SVGProjectsFiguresNav/SVGProjectsFiguresNav\";\r\nimport { Figure } from \"./static/Figure\";\r\nimport { InitialState } from \"./redux/initialState\";\r\n\r\ntype StateProps = {\r\n  ifProjectCreationMode: boolean,\r\n  selectedFigure: Figure,\r\n  ifAnimationEditionMode: boolean\r\n}\r\nclass SVGAnimation extends React.PureComponent<StateProps> {\r\n\r\n  componentDidMount() {\r\n    console.log(\"SVGAnimation Mounted\");\r\n  }\r\n\r\n  render() {\r\n    console.log(\"SVGAnimation render\");\r\n    const { selectedFigure, ifAnimationEditionMode, ifProjectCreationMode } = this.props;\r\n    return (\r\n      <div className=\"container-fluid h-100 bg-white\">\r\n        <div className=\"row h-100\">\r\n          <div className=\"projects-figures col-lg-3 p-0 border-right overflow-auto\">\r\n            <SVGProjectsFiguresNav />\r\n            {ifProjectCreationMode\r\n              ? <SVGProjectsList />\r\n              : <SVGFiguresList />\r\n            }\r\n          </div>\r\n          <div className=\"col-lg-5 p-0 h-100\" >\r\n            <SVGCanvas />\r\n          </div>\r\n          <div className=\"col-lg-4 h-100 bg-light overflow-auto border\">\r\n            <SVGEditorNav />\r\n            {selectedFigure &&\r\n              (ifAnimationEditionMode\r\n                ? <SVGAnimationEditor />\r\n                : <SVGFigureEditor />\r\n              )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: InitialState): StateProps => {\r\n  const { selectedFigure } = state.figuresProjects.present;\r\n  const { ifProjectCreationMode, ifAnimationEditionMode } = state.selectedList;\r\n  return { selectedFigure, ifProjectCreationMode, ifAnimationEditionMode };\r\n}\r\n\r\nexport default connect<StateProps,{},{},InitialState>(\r\n  mapStateToProps,\r\n)(SVGAnimation)\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { Figure } from './Figure'\r\n\r\nconst figuresForProjects1 = [new Figure(), new Figure(), new Figure()];\r\nfiguresForProjects1[0].fill.hex = '#EB144C' // czerwony\r\nfiguresForProjects1[1].fill.hex = '#FCB900' //żólty\r\nfiguresForProjects1[1].xPosition = 200;\r\nfiguresForProjects1[2].fill.hex = '#00D084'\r\nfiguresForProjects1[2].xPosition = 350;\r\n\r\nconst figuresForProjects2 = [new Figure(), new Figure(), new Figure()];\r\nfiguresForProjects2[0].fill.hex = '#FCB900'\r\nfiguresForProjects2[1].fill.hex = '#FCB900'\r\nfiguresForProjects2[1].xPosition = 200;\r\nfiguresForProjects2[2].fill.hex = '#FCB900'\r\nfiguresForProjects2[2].xPosition = 350;\r\n\r\nconst figuresForProjects3 = [new Figure(), new Figure(), new Figure()];\r\nfiguresForProjects3[0].fill.hex = '#EB144C'\r\nfiguresForProjects3[1].fill.hex = '#EB144C'\r\nfiguresForProjects3[1].xPosition = 200;\r\nfiguresForProjects3[2].fill.hex = '#EB144C'\r\nfiguresForProjects3[2].xPosition = 350;\r\n\r\n\r\nexport const FiguresForProjects = [figuresForProjects1, figuresForProjects2, figuresForProjects3]","import { Figure } from \"./Figure\";\r\nimport { MetadataObj } from \"../redux/reducers/utils\";\r\n\r\nconst uuidv4 = require('uuid/v4');\r\n\r\nexport class Project implements MetadataObj {\r\n\r\n    static staticId: string = uuidv4();\r\n    id: string;\r\n    name: string;\r\n    figuresList: Figure[]\r\n\r\n    constructor() {\r\n        this.id = Project.staticId;\r\n        this.name = `Project ${Project.staticId.substr(0,3)}`;\r\n        this.figuresList = [];\r\n        Project.staticId = uuidv4();\r\n    }\r\n}","import { FiguresForProjects } from \"../static/StartingData\";\r\nimport { Project } from \"../static/Project\";\r\nimport { Figure } from \"../static/Figure\";\r\n\r\nexport type SelectedListState = {\r\n  ifAnimationEditionMode: boolean,\r\n  ifProjectCreationMode: boolean\r\n}\r\n\r\nexport type FiguresProjectsState = {\r\n  projectList: Project[],\r\n  selectedProject: Project,\r\n  figuresList: Figure[],\r\n  selectedFigure: Figure\r\n}\r\n\r\nexport interface IUndoableState<T> {\r\n  past: T & [],\r\n  present: T,\r\n  future: T & []\r\n}\r\n\r\nexport interface InitialState {\r\n  figuresProjects: IUndoableState<FiguresProjectsState>,\r\n  selectedList: SelectedListState\r\n\r\n}\r\n\r\nexport interface IData {\r\n  [key: string]: any;\r\n}\r\n\r\nconst createInitialFiguresProjectsState = (): FiguresProjectsState => {\r\n\r\n  const projectList: Project[] = [...Array(FiguresForProjects.length)].map((value, index) => {\r\n    let project = new Project();\r\n    project.figuresList = FiguresForProjects[index];\r\n    return project;\r\n  });\r\n  projectList[0].name = \"Alpha\"\r\n  projectList[1].name = \"Beta\"\r\n  projectList[2].name = \"Gamma\"\r\n  return {\r\n    projectList: projectList,\r\n    selectedProject: projectList[0],\r\n    figuresList: projectList[0].figuresList,\r\n    selectedFigure: projectList[0].figuresList[0]\r\n  }\r\n}\r\n\r\nconst createInitialSelectedListState = (): SelectedListState => {\r\n  return { ifProjectCreationMode: true, ifAnimationEditionMode: false }\r\n}\r\n\r\nexport const initialFiguresProjectsState = createInitialFiguresProjectsState();\r\nexport const selectedListState = createInitialSelectedListState();\r\n","import { cloneDeep } from 'lodash';\r\nimport { Action } from 'redux';\r\n\r\ninterface Item {\r\n    id: number\r\n    [key: string]: any\r\n}\r\n\r\nexport interface MetadataObj {\r\n    [key: string]: any\r\n}\r\n\r\n\r\nexport function deleteItemFromArray<T extends MetadataObj>(array: T[], itemId: number | string) {\r\n    return array.filter((item, index) => {\r\n        if (item.id === itemId) {\r\n            return false;\r\n        }\r\n        return true;\r\n    })\r\n}\r\n\r\nexport function compareItems<T extends MetadataObj>(item: T, id: number | string) {\r\n    return item !== null\r\n        ? item.id === id\r\n        : false;\r\n}\r\n\r\n\r\n\r\nexport function findItemInArray<T extends MetadataObj>(array: T[],  propertyType: keyof T , propertyValue: string | number) : T | undefined  {\r\n    return array.find(item => item[propertyType] === propertyValue);\r\n}\r\n\r\nexport function updateObject<T>(oldObject: T, newValues: any): T {\r\n    return Object.assign({}, oldObject, newValues);\r\n}\r\n\r\nexport function deepCloneObject<T>(objectToCopy: T) {\r\n    return cloneDeep(objectToCopy);\r\n}\r\n\r\nexport function isAction<T extends Action>(action: T, type: string) : action is T {\r\n    return action.type === type;\r\n}","import { IMPORT_FIGURES_FROM_FILE, CHANGE_ACTIVE_SVG_FIGURE, CHANGE_FIGURE_VALUE, ADD_FIGURE, DELETE_FIGURE, SHOW_FIGURE_EDITOR, ADD_PROJECT, DELETE_PROJECT, SET_CURRENT_PROJECT, HANDLE_IMPORTED_PROJECT_FILE, CHANGE_PROJECT_NAME } from './actionTypes'\r\nimport { initialFiguresProjectsState, FiguresProjectsState } from '../../initialState';\r\nimport { Figure } from \"../../../static/Figure\";\r\nimport { Project } from '../../../static/Project';\r\nimport { deleteItemFromArray, compareItems, findItemInArray, updateObject, deepCloneObject } from '../utils';\r\nimport undoable, { excludeAction } from 'redux-undo';\r\nimport { FiguresProjectsActionTypes, ChangeFigureValueAction, SetCurrentProjectAction, DeleteProjectAction, ShowFigureEditorAction, DeleteFigureAction, ChangeActiveSVGFigureAction, ImportFiguresFromFileAction, HandleImportedProjectFileAction, ChangeProjectNameAction } from './actions';\r\nimport { AnyAction } from 'redux';\r\n\r\n\r\nfunction handleImportedProjectFile(state: FiguresProjectsState, action: HandleImportedProjectFileAction): FiguresProjectsState {\r\n    const { projectList } = deepCloneObject(state);\r\n    let newProjectList: Project[] = JSON.parse(action.payload.fileContent as string).concat(projectList);\r\n    return {\r\n        ...state,\r\n        projectList: newProjectList\r\n    }\r\n}\r\n\r\nfunction importFiguresFromFile(state: FiguresProjectsState, action: ImportFiguresFromFileAction) {\r\n    const { importedFiguresList } = action.payload;\r\n    const { projectList, selectedProject } = updateProjectState(state, importedFiguresList);\r\n    return updateObject(state, { projectList: projectList, selectedProject, figuresList: importedFiguresList })\r\n}\r\n\r\nfunction changeActiveSVGFigure(state: FiguresProjectsState, action: ChangeActiveSVGFigureAction) {\r\n    const { hrefid } = action.payload;\r\n    const { figuresList } = deepCloneObject(state);\r\n    let selectedFigure = findItemInArray(figuresList, \"hrefid\", hrefid);\r\n    return updateObject(state, { selectedFigure: selectedFigure })\r\n}\r\n\r\nfunction addFigure(state: FiguresProjectsState) {\r\n    return {\r\n        ...state,\r\n        figuresList: [\r\n            ...state.figuresList,\r\n            new Figure()\r\n        ]\r\n    }\r\n}\r\n\r\nfunction deleteFigure(state: FiguresProjectsState, action: DeleteFigureAction) {\r\n    const { id } = action.payload;\r\n    const { selectedFigure } = deepCloneObject(state);\r\n    let figuresList = deleteItemFromArray(state.figuresList, id);\r\n    let isSelectedFigure = compareItems(selectedFigure, id);\r\n    const { projectList, selectedProject } = updateProjectState(state, figuresList);\r\n    return updateObject(state, {\r\n        figuresList: figuresList,\r\n        selectedFigure: isSelectedFigure ? null : selectedFigure,\r\n        projectList: projectList,\r\n        selectedProject: selectedProject\r\n    })\r\n}\r\n\r\nfunction showFigureEditor(state: FiguresProjectsState, action: ShowFigureEditorAction) {\r\n    let selectedFigure = findItemInArray(state.figuresList, \"id\", action.payload.id);\r\n    console.log(selectedFigure);\r\n    return updateObject(state, { selectedFigure: selectedFigure })\r\n}\r\n\r\nfunction addProject(state: FiguresProjectsState) {\r\n    return {\r\n        ...state,\r\n        projectList: [\r\n            ...state.projectList,\r\n            new Project()\r\n        ]\r\n    }\r\n}\r\n\r\nfunction deleteProject(state: FiguresProjectsState, action: DeleteProjectAction) {\r\n    const { id } = action.payload;\r\n    const { selectedProject, figuresList, selectedFigure } = deepCloneObject(state);\r\n    let projectList = deleteItemFromArray(state.projectList, id);\r\n    let isSelectedProject = compareItems(selectedProject, id);\r\n    return updateObject(state, {\r\n        projectList: projectList,\r\n        selectedProject: isSelectedProject ? null : selectedProject,\r\n        figuresList: isSelectedProject ? [] : figuresList,\r\n        selectedFigure: isSelectedProject ? null : selectedFigure,\r\n    })\r\n}\r\n\r\nfunction setCurrentProject(state: FiguresProjectsState, action: SetCurrentProjectAction) {\r\n    let selectedProject: Project | undefined = findItemInArray(state.projectList, \"id\", action.payload.id);\r\n\r\n    return selectedProject !== undefined ?\r\n        updateObject(state, {\r\n            selectedProject: selectedProject,\r\n            figuresList: selectedProject.figuresList,\r\n            selectedFigure: null\r\n        })\r\n        : state;\r\n}\r\n\r\ntype ProjectState = {\r\n    projectList: Project[],\r\n    selectedProject: Project\r\n}\r\n\r\nfunction updateProjectState(state: FiguresProjectsState, figuresList: Figure[]): ProjectState {\r\n    const { projectList, selectedProject } = deepCloneObject(state);\r\n    let projectToUpdateIndex: number = projectList.findIndex(project => project.id === selectedProject.id);\r\n    projectList[projectToUpdateIndex].figuresList = figuresList;\r\n    selectedProject.figuresList = figuresList;\r\n    return { projectList, selectedProject }\r\n}\r\n\r\nfunction changeFigureValue(state: FiguresProjectsState, action: ChangeFigureValueAction) {\r\n    const { type, value } = action.payload;\r\n    const { selectedFigure, figuresList } = deepCloneObject(state);\r\n    switch (type) {\r\n        case \"name\": {\r\n            selectedFigure.name = value as string;\r\n            break;\r\n        }\r\n        case \"figureType\": {\r\n            selectedFigure.figureType = value as string;\r\n            if (value === 'Square') selectedFigure.numOfSides = 4;\r\n            break;\r\n        }\r\n        case \"size\": {\r\n            selectedFigure.size = value as number;\r\n            break;\r\n        }\r\n        case \"xPosition\": {\r\n            selectedFigure.xPosition = value as number;\r\n            break;\r\n        }\r\n        case \"yPosition\": {\r\n            selectedFigure.yPosition = value as number;\r\n            break;\r\n        }\r\n        case \"numOfSides\": {\r\n            selectedFigure.numOfSides = value as number;\r\n            break;\r\n        }\r\n        case \"opacity\": {\r\n            selectedFigure.opacity = value as number;\r\n            break;\r\n        }\r\n        case \"fill\": {\r\n            selectedFigure.fill = value as string;\r\n            console.log(value, \"fill\");\r\n            break;\r\n        }\r\n        case \"stroke\": {\r\n            selectedFigure.stroke = value as string;\r\n            break;\r\n        }\r\n        case \"strokeWidth\": {\r\n            selectedFigure.strokeWidth = value as number;\r\n            break;\r\n        }\r\n        case \"animation.attributeName\": {\r\n            selectedFigure.animation.attributeName = value as string;\r\n            break;\r\n        }\r\n        case \"animation.from\": {\r\n            selectedFigure.animation.from = value as number;\r\n            break;\r\n        }\r\n        case \"animation.to\": {\r\n            selectedFigure.animation.to = value as number;\r\n            break;\r\n        }\r\n        case \"animation.dur\": {\r\n            selectedFigure.animation.dur = value as number;\r\n            break;\r\n        }\r\n        case \"animation.r\": {\r\n            selectedFigure.animation.r = value as number;\r\n            break;\r\n        }\r\n        case \"animationEnabled\": {\r\n            selectedFigure.animationEnabled = value as boolean;\r\n            break;\r\n        }\r\n        default: {\r\n            break;\r\n        }\r\n    }\r\n\r\n    figuresList[figuresList.findIndex(figure => figure.id === selectedFigure.id)] = selectedFigure;\r\n    const { projectList, selectedProject } = updateProjectState(state, figuresList);\r\n\r\n    return updateObject(\r\n        state, {\r\n            figuresList: figuresList,\r\n            projectList: projectList,\r\n            selectedFigure: selectedFigure,\r\n            selectedProject: selectedProject\r\n        });\r\n}\r\n\r\nfunction ChangeProjectName(state: FiguresProjectsState, action: ChangeProjectNameAction) {\r\n    const { projectList, selectedProject } = deepCloneObject(state);\r\n    selectedProject.name = action.payload.name;\r\n    projectList[projectList.findIndex(project => project.id === selectedProject.id)] = selectedProject;\r\n    return updateObject(state, { projectList: projectList, selectedProject: selectedProject })\r\n}\r\n\r\nconst figuresProjects = (state: FiguresProjectsState = initialFiguresProjectsState, action: FiguresProjectsActionTypes | AnyAction): FiguresProjectsState => {\r\n\r\n    switch (action.type) {\r\n        case HANDLE_IMPORTED_PROJECT_FILE:\r\n            return handleImportedProjectFile(state, action as HandleImportedProjectFileAction);\r\n        case IMPORT_FIGURES_FROM_FILE:\r\n            return importFiguresFromFile(state, action as ImportFiguresFromFileAction);\r\n        case CHANGE_ACTIVE_SVG_FIGURE:\r\n            return changeActiveSVGFigure(state, action as ChangeActiveSVGFigureAction)\r\n        case ADD_FIGURE: {\r\n            return addFigure(state);\r\n        }\r\n        case DELETE_FIGURE: {\r\n            return deleteFigure(state, action as DeleteFigureAction);\r\n        }\r\n        case SHOW_FIGURE_EDITOR: {\r\n            return showFigureEditor(state, action as ShowFigureEditorAction)\r\n        }\r\n        case ADD_PROJECT: {\r\n            return addProject(state);\r\n        }\r\n        case DELETE_PROJECT: {\r\n            return deleteProject(state, action as DeleteProjectAction);\r\n        }\r\n        case SET_CURRENT_PROJECT: {\r\n            return setCurrentProject(state, action as SetCurrentProjectAction);\r\n        }\r\n        case CHANGE_FIGURE_VALUE: {\r\n            return changeFigureValue(state, action as ChangeFigureValueAction);\r\n        }\r\n        case CHANGE_PROJECT_NAME: {\r\n            return ChangeProjectName(state, action as ChangeProjectNameAction);\r\n        }\r\n        default:\r\n            return state;\r\n    };\r\n}\r\n\r\nconst undoableFiguresProjects = undoable(figuresProjects, {\r\n    filter: excludeAction([SET_CURRENT_PROJECT, SHOW_FIGURE_EDITOR, CHANGE_ACTIVE_SVG_FIGURE])\r\n});\r\n\r\nexport default undoableFiguresProjects;","import { combineReducers } from \"redux\";\r\nimport figuresProjects from \"./figuresProjects/figuresProjects\";\r\nimport selectedList from \"./selectedList/selectedList\";\r\n\r\nexport const rootReducer =  combineReducers({ figuresProjects,selectedList });\r\n","import { selectedListState, SelectedListState } from '../../initialState';\r\nimport { updateObject } from '../utils';\r\nimport { HANDLE_EDITOR_TAB_CHANGE, CHANGE_PROJECT_FIGURE_TAB } from './actionTypes';\r\nimport { SelectedListActionTypes } from './actions';\r\n\r\nexport default function (state: SelectedListState = selectedListState, action: SelectedListActionTypes): SelectedListState {\r\n    switch (action.type) {\r\n        case HANDLE_EDITOR_TAB_CHANGE: {\r\n            return updateObject<SelectedListState>(state, { ifAnimationEditionMode: action.payload.flag });\r\n        }\r\n        case CHANGE_PROJECT_FIGURE_TAB: {\r\n            return updateObject<SelectedListState>(state, { ifProjectCreationMode: action.payload.flag });\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n","import { createStore } from \"redux\";\r\nimport { rootReducer } from \"./reducers/rootReducer\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nexport default createStore(rootReducer, composeWithDevTools());","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport SVGAnimation from './animation/SVGAnimation';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport store from './animation/redux/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nconst rootElement = document.getElementById('root');\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <SVGAnimation />\r\n    </Provider>,\r\n    rootElement\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n"],"sourceRoot":""}